{"version":3,"file":"component---src-pages-index-js-472a2aaed7f765096e46.js","mappings":"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","sources":["webpack://jgmurillo10/./src/components/About.jsx","webpack://jgmurillo10/./src/pages/index.js"],"sourcesContent":["import React from \"react\"\nimport Button from \"components/_ui/Button\"\nimport styled from \"@emotion/styled\"\nimport dimensions from \"styles/dimensions\"\nimport { PrismicRichText } from \"@prismicio/react\"\nimport PropTypes from \"prop-types\"\n\nconst AboutContainer = styled(\"div\")`\n  padding-top: 1em;\n  display: grid;\n  grid-template-columns: 8em 1fr 8em;\n  grid-gap: 3em;\n\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\n    grid-template-columns: 1fr 3fr 1fr;\n  }\n\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\n    grid-template-columns: 7em 1fr;\n    grid-template-rows: 3em 1fr;\n    grid-gap: 2em;\n  }\n`\n\nconst AboutLinkContainer = styled(\"div\")`\n  padding-top: 1em;\n  padding-bottom: 3em;\n  display: flex;\n  flex-direction: column;\n\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\n    grid-row: 2;\n  }\n`\n\nconst AboutLink = styled(\"a\")`\n  margin-bottom: 1.5em;\n  font-weight: 600;\n  line-height: 1.9;\n  text-decoration: none;\n  color: currentColor;\n\n  span {\n    margin-left: 1em;\n    transform: translateX(-8px);\n    display: inline-block;\n    opacity: 0;\n    transition: all 400ms ease-in-out;\n  }\n\n  &:hover {\n    span {\n      transform: translateX(0px);\n      opacity: 1;\n      transition: all 150ms ease-in-out;\n    }\n  }\n`\n\nconst AboutBio = styled(\"div\")`\n  padding-bottom: 3em;\n  max-width: 480px;\n\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\n    grid-row: 2;\n  }\n`\n\nconst AboutActions = styled(\"div\")`\n  padding-top: 1em;\n  padding-bottom: 3em;\n\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\n    padding: 0;\n    grid-column: 1 / -1;\n    grid-row: 1;\n  }\n`\n\nconst About = ({ bio, socialLinks }) => (\n  <AboutContainer>\n    <AboutLinkContainer>\n      {socialLinks.map((social, i) => (\n        <AboutLink\n          key={i}\n          href={social.about_link.richText[0].spans[0].data.url}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {social.about_link.text}\n          <span>&#8594;</span>\n        </AboutLink>\n      ))}\n    </AboutLinkContainer>\n    <AboutBio><PrismicRichText field={bio} /></AboutBio>\n    <AboutActions>\n      <a\n        href=\"mailto:juanchomurcas@gmail.com\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Button className=\"Button--secondary\">Email me</Button>\n      </a>\n    </AboutActions>\n  </AboutContainer>\n)\n\nexport default About\n\nAbout.propTypes = {\n  bio: PropTypes.object.isRequired,\n  socialLinks: PropTypes.array.isRequired,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { PrismicRichText } from \"@prismicio/react\"\nimport { graphql, Link } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport colors from \"styles/colors\"\nimport dimensions from \"styles/dimensions\"\nimport Button from \"components/_ui/Button\"\nimport About from \"components/About\"\nimport Layout from \"components/Layout\"\nimport ProjectCard from \"components/ProjectCard\"\n\nconst Hero = styled(\"div\")`\n  padding-top: 2.5em;\n  padding-bottom: 3em;\n  margin-bottom: 6em;\n  max-width: 830px;\n\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\n    margin-bottom: 3em;\n  }\n\n  h1 {\n    margin-bottom: 1em;\n\n    a {\n      text-decoration: none;\n      transition: all 100ms ease-in-out;\n\n      &:nth-of-type(1) {\n        color: ${colors.blue500};\n      }\n      &:nth-of-type(2) {\n        color: ${colors.orange500};\n      }\n      &:nth-of-type(3) {\n        color: ${colors.purple500};\n      }\n      &:nth-of-type(4) {\n        color: ${colors.green500};\n      }\n      &:nth-of-type(5) {\n        color: ${colors.teal500};\n      }\n\n      &:hover {\n        cursor: pointer;\n        transition: all 100ms ease-in-out;\n\n        &:nth-of-type(1) {\n          color: ${colors.blue600};\n          background-color: ${colors.blue200};\n        }\n        &:nth-of-type(2) {\n          color: ${colors.orange600};\n          background-color: ${colors.orange200};\n        }\n        &:nth-of-type(3) {\n          color: ${colors.purple600};\n          background-color: ${colors.purple200};\n        }\n        &:nth-of-type(4) {\n          color: ${colors.green600};\n          background-color: ${colors.green200};\n        }\n        &:nth-of-type(5) {\n          color: ${colors.teal600};\n          background-color: ${colors.teal200};\n        }\n      }\n    }\n  }\n`\n\nconst HeroImage = styled(\"img\")`\n  width: 260px;\n  border-radius: 50%;\n  display: block;\n  margin: 0 auto;\n  transition: transform 300ms ease;\n\n  :hover {\n    transform: scale(1.1);\n  }\n`\n\nconst Section = styled(\"div\")`\n  margin-bottom: 10em;\n  display: flex;\n  flex-direction: column;\n\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\n    margin-bottom: 4em;\n  }\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n`\n\nconst WorkAction = styled(Link)`\n  font-weight: 600;\n  text-decoration: none;\n  color: currentColor;\n  transition: all 150ms ease-in-out;\n  margin-left: auto;\n\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\n    margin: 0 auto;\n  }\n\n  span {\n    margin-left: 1em;\n    transform: translateX(-8px);\n    display: inline-block;\n    transition: transform 400ms ease-in-out;\n  }\n\n  &:hover {\n    color: ${colors.blue500};\n    transition: all 150ms ease-in-out;\n\n    span {\n      transform: translateX(0px);\n      opacity: 1;\n      transition: transform 150ms ease-in-out;\n    }\n  }\n`\n\nconst RenderBody = ({ home, projects, meta }) => (\n  <>\n    <Helmet\n      title={meta.title}\n      // titleTemplate={`%s | ${meta.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: meta.description,\n        },\n        {\n          property: `og:title`,\n          content: meta.title,\n        },\n        {\n          property: `og:description`,\n          content: meta.description,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: meta.author,\n        },\n        {\n          name: `twitter:title`,\n          content: meta.title,\n        },\n        {\n          name: `twitter:description`,\n          content: meta.description,\n        },\n        {\n          property: `og:image`,\n          content: meta.image,\n        },\n        {\n          property: `twitter:image`,\n          content: meta.image,\n        },\n      ].concat(meta)}\n    />\n    <Hero>\n      <HeroImage src={home.data.hero_image.url} alt=\"\" />\n      <PrismicRichText field={home.data.hero_title.richText} />\n      <a\n        href=\"https://drive.google.com/file/d/1AKFJ3tXX50QW-UsGw9WfJy30SUCzGggd/view\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Button><PrismicRichText field={home.data.hero_button_text.richText} /></Button>\n      </a>\n    </Hero>\n    <Section>\n      {projects\n        .filter(project => project.node.data.project_is_public)\n        .filter(project => project.node.data.project_is_featured)\n        .map((project, i) => (\n          <ProjectCard\n            key={i}\n            category={project.node.data.project_category}\n            title={project.node.data.project_title}\n            description={project.node.data.project_preview_description}\n            thumbnail={project.node.data.project_preview_thumbnail}\n            uid={project.node.uid}\n          />\n        ))}\n      <WorkAction to={\"/work\"}>\n        See more work <span>&#8594;</span>\n      </WorkAction>\n    </Section>\n    <Section>\n      <PrismicRichText field={home.data.about_title.richText} />\n      <About bio={home.data.about_bio || ''} socialLinks={home.data.about_links} />\n    </Section>\n  </>\n)\n\nconst Component = ({ data }) => {\n  //Required check for no data being returned\n  const doc = data.allPrismicHomepage.edges.slice(0, 1).pop()\n  const projects = data.allPrismicProject.edges\n  const meta = data.site.siteMetadata\n\n  if (!doc || !projects) return null\n\n  return (\n    <Layout>\n      <RenderBody home={doc.node} projects={projects} meta={meta} />\n    </Layout>\n  )\n}\n\nexport default Component;\n\nRenderBody.propTypes = {\n  home: PropTypes.object.isRequired,\n  projects: PropTypes.array.isRequired,\n  meta: PropTypes.object.isRequired,\n}\n\nexport const query = graphql`\n  {\n    allPrismicHomepage {\n      edges {\n        node {\n          data {\n            hero_title {\n              text\n              richText\n            }\n            hero_image {\n              url\n            }\n            hero_button_text {\n              text\n              richText\n            }\n            content {\n              text\n            }\n            about_title {\n              text\n              richText\n            }\n            about_bio {\n              text\n            }\n            about_links {\n              about_link {\n                text\n                richText\n              }\n            }\n          }\n        }\n      }\n    }\n    allPrismicProject {\n      edges {\n        node {\n          data {\n            project_title {\n              text\n            }\n            project_preview_description {\n              text\n              richText\n            }\n            project_preview_thumbnail {\n              url\n            }\n            project_category {\n              text\n            }\n            project_post_date(fromNow: true)\n            project_is_public\n            project_is_featured\n          }\n          uid\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        description\n        author\n        image\n      }\n    }\n  }\n`\n"],"names":["AboutContainer","_styled","target","dimensions","AboutLinkContainer","AboutLink","name","styles","AboutBio","AboutActions","_ref","bio","socialLinks","___EmotionJSX","map","social","i","key","href","about_link","richText","spans","data","url","rel","text","PrismicRichText","field","Button","className","Hero","colors","HeroImage","Section","WorkAction","Link","RenderBody","home","projects","meta","React","Helmet","title","content","description","property","author","image","concat","src","hero_image","alt","hero_title","hero_button_text","filter","project","node","project_is_public","project_is_featured","ProjectCard","category","project_category","project_title","project_preview_description","thumbnail","project_preview_thumbnail","uid","to","about_title","About","about_bio","about_links","_ref2","doc","allPrismicHomepage","edges","slice","pop","allPrismicProject","site","siteMetadata","Layout"],"sourceRoot":""}