{"version":3,"file":"component---src-pages-work-js-a2efa0d8f8407e47f33b.js","mappings":"gQAWA,MAAMA,GAAYC,EAAAA,EAAAA,GAAO,KAAI,CAAAC,OAAA,aAAXD,CAAY,CAAAE,KAAA,UAAAC,OAAA,sBAIjBC,EAAQA,KAAMC,EAAAA,EAAAA,IAACC,EAAAA,EAAQ,CAACC,MAAM,wBAErCC,EAAOC,IAAyB,IAAxB,SAAEC,EAAQ,KAAEC,GAAMF,EAE9B,MAAM,EAACG,IAAUC,EAAAA,EAAAA,WAAS,GAE1B,OACER,EAAAA,EAAAA,IAACS,EAAAA,EAAM,MACLT,EAAAA,EAAAA,IAACN,EAAS,MAACM,EAAAA,EAAAA,IAACU,EAAAA,iBAAgB,CAACC,GAAG,WAChCX,EAAAA,EAAAA,IAAAY,EAAAA,SAAA,KACGP,EACEQ,QAAOC,GAAWP,GAAUO,EAAQC,KAAKC,KAAKC,oBAC9CC,KAAI,CAACJ,EAASK,KACbnB,EAAAA,EAAAA,IAACoB,EAAAA,EAAW,CACVC,IAAKF,EACLG,SAAUR,EAAQC,KAAKC,KAAKO,iBAC5BrB,MAAOY,EAAQC,KAAKC,KAAKQ,cACzBC,YAAaX,EAAQC,KAAKC,KAAKU,4BAC/BC,UAAWb,EAAQC,KAAKC,KAAKY,0BAC7BC,IAAKf,EAAQC,KAAKc,UAI1B7B,EAAAA,EAAAA,IAAA,KACE8B,KAAK,sCACLlC,OAAO,SACPmC,IAAI,wBAEJ/B,EAAAA,EAAAA,IAACgC,EAAAA,EAAM,MAAChC,EAAAA,EAAAA,IAACU,EAAAA,iBAAgB,CAACC,GAAG,kBAExB,EAab,UATkBsB,IAAyB,IAAxB,KAAEjB,EAAI,SAAEkB,GAAUD,EACnC,MAAM,SAAEE,IAAaC,EAAAA,EAAAA,GAAkB,CAAEF,aACnC7B,EAAWW,EAAKqB,kBAAkBC,MAAMzB,QAAO0B,GAAQA,EAAKxB,KAAKyB,OAASL,EAASM,UACnFnC,EAAOU,EAAK0B,KAAKC,aACvB,OAAKtC,GAEEL,EAAAA,EAAAA,IAACG,EAAI,CAACE,SAAUA,EAAUC,KAAMA,IAFjB,IAEyB,C","sources":["webpack://jgmurillo10/./src/pages/work.js"],"sourcesContent":["import React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport Layout from \"components/Layout\"\nimport ProjectCard from \"components/ProjectCard\"\nimport Button from \"components/_ui/Button\"\nimport { useUpdateLanguage } from \"../hooks/useUpdateLanguage\"\nimport { FormattedMessage } from \"gatsby-plugin-intl\"\nimport { Head as HeadBase } from \"../components/Head\"\n\nconst WorkTitle = styled(\"h1\")`\n  margin-bottom: 1em;\n`\n\nexport const Head =  () => <HeadBase title=\"Work | Juan Murillo\" />\n\nconst Work = ({ projects, meta }) => {\n  // TODO(jgmurillo10): Implement this.\n  const [logged] = useState(false)\n\n  return (\n    <Layout>\n      <WorkTitle><FormattedMessage id=\"work\" /></WorkTitle>\n      <>\n        {projects\n          .filter(project => logged || project.node.data.project_is_public)\n          .map((project, i) => (\n            <ProjectCard\n              key={i}\n              category={project.node.data.project_category}\n              title={project.node.data.project_title}\n              description={project.node.data.project_preview_description}\n              thumbnail={project.node.data.project_preview_thumbnail}\n              uid={project.node.uid}\n            />\n          ))}\n      </>\n      <a\n        href=\"https://forms.gle/x75wbdTKjTZqpywD6\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Button><FormattedMessage id=\"projectsCTA\" /></Button>\n      </a>\n    </Layout>\n  )\n}\n\nconst Component = ({ data, location }) => {\n  const { language } = useUpdateLanguage({ location });\n  const projects = data.allPrismicProject.edges.filter(edge => edge.node.lang === language.current);\n  const meta = data.site.siteMetadata\n  if (!projects) return null\n\n  return <Work projects={projects} meta={meta} />\n}\n\nexport default Component;\n\nWork.propTypes = {\n  projects: PropTypes.array.isRequired,\n}\n\nexport const query = graphql`\n  {\n    allPrismicProject {\n      edges {\n        node {\n          lang\n          data {\n            project_title {\n              text\n            }\n            project_preview_description {\n              text\n            }\n            project_preview_thumbnail {\n              url\n            }\n            project_category {\n              text\n            }\n            project_post_date(fromNow: true)\n            project_is_public\n            project_is_featured\n          }\n          uid\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        description\n        author\n        image\n      }\n    }\n  }\n`\n"],"names":["WorkTitle","_styled","target","name","styles","Head","___EmotionJSX","HeadBase","title","Work","_ref","projects","meta","logged","useState","Layout","FormattedMessage","id","React","filter","project","node","data","project_is_public","map","i","ProjectCard","key","category","project_category","project_title","description","project_preview_description","thumbnail","project_preview_thumbnail","uid","href","rel","Button","_ref2","location","language","useUpdateLanguage","allPrismicProject","edges","edge","lang","current","site","siteMetadata"],"sourceRoot":""}