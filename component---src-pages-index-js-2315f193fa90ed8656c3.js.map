{"version":3,"sources":["webpack:///./src/components/About.jsx","webpack:///./src/pages/index.js","webpack:///./src/components/_ui/Button.jsx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["AboutContainer","dimensions","maxwidthTablet","maxwidthMobile","AboutLinkContainer","AboutLink","AboutBio","AboutActions","About","bio","socialLinks","map","social","i","key","href","about_link","spans","data","url","target","rel","text","RichText","render","Button","className","Hero","colors","blue500","orange500","purple500","green500","teal500","blue600","blue200","orange600","orange200","purple600","purple200","green600","green200","teal600","teal200","HeroImage","Section","WorkAction","Link","RenderBody","home","projects","meta","title","name","content","description","property","author","image","concat","src","hero_image","alt","hero_title","hero_button_link","hero_button_text","project","ProjectCard","category","node","project_category","project_title","project_preview_description","thumbnail","project_preview_thumbnail","uid","_meta","to","about_title","about_bio","about_links","query","doc","prismic","allHomepages","edges","slice","pop","allProjects","site","siteMetadata","Layout","ButtonContainer","blue400","pink400","purple400","blue300","this","props","children","source","excluded","sourceKeys","Object","keys","length","indexOf","onClick","Component"],"mappings":"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","file":"component---src-pages-index-js-2315f193fa90ed8656c3.js","sourcesContent":["import React from \"react\";\nimport Button from \"components/_ui/Button\";\nimport styled from \"@emotion/styled\";\nimport dimensions from \"styles/dimensions\";\nimport { RichText } from \"prismic-reactjs\";\nimport PropTypes from \"prop-types\";\n\nconst AboutContainer = styled(\"div\")`\n    padding-top: 1em;\n    display: grid;\n    grid-template-columns: 8em 1fr 8em;\n    grid-gap: 3em;\n\n    @media(max-width: ${dimensions.maxwidthTablet}px) {\n        grid-template-columns: 1fr 3fr 1fr;\n    }\n\n    @media(max-width: ${dimensions.maxwidthMobile}px) {\n        grid-template-columns: 7em 1fr;\n        grid-template-rows: 3em 1fr;\n        grid-gap: 2em;\n    }\n`\n\nconst AboutLinkContainer = styled(\"div\")`\n    padding-top: 1em;\n    padding-bottom: 3em;\n    display: flex;\n    flex-direction: column;\n\n    @media(max-width: ${dimensions.maxwidthMobile}px) {\n        grid-row: 2;\n    }\n`\n\nconst AboutLink = styled(\"a\")`\n    margin-bottom: 1.5em;\n    font-weight: 600;\n    line-height: 1.9;\n    text-decoration: none;\n    color: currentColor;\n\n    span {\n        margin-left: 1em;\n        transform: translateX(-8px);\n        display: inline-block;\n        opacity: 0;\n        transition: all 400ms ease-in-out;\n    }\n\n    &:hover {\n        span {\n            transform: translateX(0px);\n            opacity: 1;\n            transition: all 150ms ease-in-out;\n        }\n    }\n`\n\nconst AboutBio = styled(\"div\")`\n    padding-bottom: 3em;\n    max-width: 480px;\n\n\n    @media(max-width: ${dimensions.maxwidthMobile}px) {\n        grid-row: 2;\n    }\n`\n\nconst AboutActions = styled(\"div\")`\n    padding-top: 1em;\n    padding-bottom: 3em;\n\n\n    @media(max-width: ${dimensions.maxwidthMobile}px) {\n        padding: 0;\n        grid-column: 1 / -1;\n        grid-row: 1;\n    }\n`\n\n\nconst About = ({ bio, socialLinks }) => (\n    <AboutContainer>\n        <AboutLinkContainer>\n            {socialLinks.map((social, i) => (\n                <AboutLink\n                    key={i}\n                    href={social.about_link[0].spans[0].data.url}\n                    target=\"_blank\" rel=\"noopener noreferrer\">\n                    {social.about_link[0].text}\n                    <span>&#8594;</span>\n                </AboutLink>\n            ))}\n        </AboutLinkContainer>\n        <AboutBio>\n            {RichText.render(bio)}\n        </AboutBio>\n        <AboutActions>\n            <a href=\"mailto:juanchomurcas@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <Button className=\"Button--secondary\">\n                    Email me\n                </Button>\n            </a>\n        </AboutActions>\n    </AboutContainer>\n)\n\nexport default About;\n\nAbout.propTypes = {\n    bio: PropTypes.array.isRequired,\n    socialLinks: PropTypes.array.isRequired,\n};","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { RichText } from \"prismic-reactjs\"\nimport { graphql, Link } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport colors from \"styles/colors\"\nimport dimensions from \"styles/dimensions\"\nimport Button from \"components/_ui/Button\"\nimport About from \"components/About\"\nimport Layout from \"components/Layout\"\nimport ProjectCard from \"components/ProjectCard\"\n\nconst Hero = styled(\"div\")`\n  padding-top: 2.5em;\n  padding-bottom: 3em;\n  margin-bottom: 6em;\n  max-width: 830px;\n\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\n    margin-bottom: 3em;\n  }\n\n  h1 {\n    margin-bottom: 1em;\n\n    a {\n      text-decoration: none;\n      transition: all 100ms ease-in-out;\n\n      &:nth-of-type(1) {\n        color: ${colors.blue500};\n      }\n      &:nth-of-type(2) {\n        color: ${colors.orange500};\n      }\n      &:nth-of-type(3) {\n        color: ${colors.purple500};\n      }\n      &:nth-of-type(4) {\n        color: ${colors.green500};\n      }\n      &:nth-of-type(5) {\n        color: ${colors.teal500};\n      }\n\n      &:hover {\n        cursor: pointer;\n        transition: all 100ms ease-in-out;\n\n        &:nth-of-type(1) {\n          color: ${colors.blue600};\n          background-color: ${colors.blue200};\n        }\n        &:nth-of-type(2) {\n          color: ${colors.orange600};\n          background-color: ${colors.orange200};\n        }\n        &:nth-of-type(3) {\n          color: ${colors.purple600};\n          background-color: ${colors.purple200};\n        }\n        &:nth-of-type(4) {\n          color: ${colors.green600};\n          background-color: ${colors.green200};\n        }\n        &:nth-of-type(5) {\n          color: ${colors.teal600};\n          background-color: ${colors.teal200};\n        }\n      }\n    }\n  }\n`\n\nconst HeroImage = styled(\"img\")`\n  width: 260px;\n  border-radius: 50%;\n  display: block;\n  margin: 0 auto;\n  transition: transform 300ms ease;\n\n  :hover {\n    transform: scale(1.1);\n  }\n`\n\nconst Section = styled(\"div\")`\n  margin-bottom: 10em;\n  display: flex;\n  flex-direction: column;\n\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\n    margin-bottom: 4em;\n  }\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n`\n\nconst WorkAction = styled(Link)`\n  font-weight: 600;\n  text-decoration: none;\n  color: currentColor;\n  transition: all 150ms ease-in-out;\n  margin-left: auto;\n\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\n    margin: 0 auto;\n  }\n\n  span {\n    margin-left: 1em;\n    transform: translateX(-8px);\n    display: inline-block;\n    transition: transform 400ms ease-in-out;\n  }\n\n  &:hover {\n    color: ${colors.blue500};\n    transition: all 150ms ease-in-out;\n\n    span {\n      transform: translateX(0px);\n      opacity: 1;\n      transition: transform 150ms ease-in-out;\n    }\n  }\n`\n\nconst RenderBody = ({ home, projects, meta }) => (\n  <>\n    <Helmet\n      title={meta.title}\n      // titleTemplate={`%s | ${meta.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: meta.description,\n        },\n        {\n          property: `og:title`,\n          content: meta.title,\n        },\n        {\n          property: `og:description`,\n          content: meta.description,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: meta.author,\n        },\n        {\n          name: `twitter:title`,\n          content: meta.title,\n        },\n        {\n          name: `twitter:description`,\n          content: meta.description,\n        },\n        {\n            property: `og:image`,\n            content: meta.image,\n        },\n        {\n            property: `twitter:image`,\n            content: meta.image,\n        },\n      ].concat(meta)}\n    />\n    <Hero>\n      <HeroImage src={home.hero_image.url} alt=\"\" />\n      <>{RichText.render(home.hero_title)}</>\n      <a\n        href={home.hero_button_link.url}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Button>{RichText.render(home.hero_button_text)}</Button>\n      </a>\n    </Hero>\n    <Section>\n      {projects.map((project, i) => (\n        <ProjectCard\n          key={i}\n          category={project.node.project_category}\n          title={project.node.project_title}\n          description={project.node.project_preview_description}\n          thumbnail={project.node.project_preview_thumbnail}\n          uid={project.node._meta.uid}\n        />\n      ))}\n      <WorkAction to={\"/work\"}>\n        See more work <span>&#8594;</span>\n      </WorkAction>\n    </Section>\n    <Section>\n      {RichText.render(home.about_title)}\n      <About bio={home.about_bio} socialLinks={home.about_links} />\n    </Section>\n  </>\n)\n\nexport default ({ data }) => {\n  //Required check for no data being returned\n  const doc = data.prismic.allHomepages.edges.slice(0, 1).pop()\n  const projects = data.prismic.allProjects.edges\n  const meta = data.site.siteMetadata\n\n  if (!doc || !projects) return null\n\n  return (\n    <Layout>\n      <RenderBody home={doc.node} projects={projects} meta={meta} />\n    </Layout>\n  )\n}\n\nRenderBody.propTypes = {\n  home: PropTypes.object.isRequired,\n  projects: PropTypes.array.isRequired,\n  meta: PropTypes.object.isRequired,\n}\n\nexport const query = graphql`\n  {\n    prismic {\n      allHomepages {\n        edges {\n          node {\n            hero_title\n            hero_image\n            hero_button_text\n            hero_button_link {\n              ... on PRISMIC__ExternalLink {\n                _linkType\n                url\n              }\n            }\n            content\n            about_title\n            about_bio\n            about_links {\n              about_link\n            }\n          }\n        }\n      }\n      allProjects {\n        edges {\n          node {\n            project_title\n            project_preview_description\n            project_preview_thumbnail\n            project_category\n            project_post_date\n            _meta {\n              uid\n            }\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        description\n        author\n        image\n      }\n    }\n  }\n`\n","import React, { Component } from 'react';\nimport styled from \"@emotion/styled\";\nimport colors from \"styles/colors\";\nimport dimensions from \"styles/dimensions\";\n\nconst ButtonContainer = styled(\"button\")`\n    padding: 1em 2em;\n    background: ${colors.blue400};\n    font-weight: 600;\n    color: white;\n    outline: none;\n    border: none;\n    font-size: 1rem;\n    border-radius: 2px;\n    position: relative;\n    transition: background 100ms ease-in-out;\n\n    @media(max-width:${dimensions.maxwidthMobile}px) {\n        padding: 0.8em 1.8em;\n        font-size: 1em;\n    }\n\n    p {\n        margin: 0;\n    }\n\n    &:before {\n        content: \"\";\n        position: absolute;\n        left: 0;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        background: linear-gradient(135deg, ${colors.pink400} 0%, ${colors.purple400} 100%);\n        z-index: -1;\n    }\n\n    &:hover {\n        cursor: pointer;\n        background: transparent;\n        transition: background 100ms ease-in-out;\n    }\n\n    &.Button--secondary {\n        background: ${colors.blue200};\n        color: ${colors.blue600};\n        padding: 0.95em 1.8em;\n        font-size: 0.95rem;\n\n        &:hover {\n            background: ${colors.blue300};\n            transition: background 100ms ease-in-out;\n        }\n    }\n`\n\nclass Button extends Component {\n    render() {\n        const { children, ...props } = this.props;\n        return (\n            <ButtonContainer\n                onClick={this.props.onClick}\n                {...props}>\n                {this.props.children}\n            </ButtonContainer>\n        );\n    }\n}\n\nexport default Button;","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}