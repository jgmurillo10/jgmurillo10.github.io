{"version":3,"file":"component---src-pages-index-jsx-fa1bd1381cbcea6a610f.js","mappings":"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","sources":["webpack://jgmurillo10/./src/components/About.jsx","webpack://jgmurillo10/./src/pages/index.jsx","webpack://jgmurillo10/./src/hooks/useSiteMetadata.ts"],"sourcesContent":["import React from \"react\"\nimport Button from \"components/_ui/Button\"\nimport styled from \"@emotion/styled\"\nimport dimensions from \"styles/dimensions\"\nimport { PrismicRichText } from \"@prismicio/react\"\nimport PropTypes from \"prop-types\"\n\nconst AboutContainer = styled(\"div\")`\n  padding-top: 1em;\n  display: grid;\n  grid-template-columns: 8em 1fr 8em;\n  grid-gap: 3em;\n\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\n    grid-template-columns: 1fr 3fr 1fr;\n  }\n\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\n    grid-template-columns: 7em 1fr;\n    grid-template-rows: 3em 1fr;\n    grid-gap: 2em;\n  }\n`\n\nconst AboutLinkContainer = styled(\"div\")`\n  padding-top: 1em;\n  padding-bottom: 3em;\n  display: flex;\n  flex-direction: column;\n\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\n    grid-row: 2;\n  }\n`\n\nconst AboutLink = styled(\"a\")`\n  margin-bottom: 1.5em;\n  font-weight: 600;\n  line-height: 1.9;\n  text-decoration: none;\n  color: currentColor;\n\n  span {\n    margin-left: 1em;\n    transform: translateX(-8px);\n    display: inline-block;\n    opacity: 0;\n    transition: all 400ms ease-in-out;\n  }\n\n  &:hover {\n    span {\n      transform: translateX(0px);\n      opacity: 1;\n      transition: all 150ms ease-in-out;\n    }\n  }\n`\n\nconst AboutBio = styled(\"div\")`\n  padding-bottom: 3em;\n  max-width: 480px;\n\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\n    grid-row: 2;\n  }\n`\n\nconst AboutActions = styled(\"div\")`\n  padding-top: 1em;\n  padding-bottom: 3em;\n\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\n    padding: 0;\n    grid-column: 1 / -1;\n    grid-row: 1;\n  }\n`\n\nconst About = ({ bio, socialLinks }) => (\n  <AboutContainer>\n    <AboutLinkContainer>\n      {socialLinks.map((social, i) => (\n        <AboutLink\n          key={i}\n          href={social.about_link.richText[0].spans[0].data.url}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {social.about_link.text}\n          <span>&#8594;</span>\n        </AboutLink>\n      ))}\n    </AboutLinkContainer>\n    <AboutBio><PrismicRichText field={bio} /></AboutBio>\n    <AboutActions>\n      <a\n        href=\"mailto:juanchomurcas@gmail.com\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Button className=\"Button--secondary\">Email me</Button>\n      </a>\n    </AboutActions>\n  </AboutContainer>\n)\n\nexport default About\n\nAbout.propTypes = {\n  bio: PropTypes.object.isRequired,\n  socialLinks: PropTypes.array.isRequired,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { PrismicRichText } from \"@prismicio/react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport colors from \"styles/colors\"\nimport dimensions from \"styles/dimensions\"\nimport Button from \"components/_ui/Button\"\nimport About from \"components/About\"\nimport Layout from \"components/Layout\"\nimport ProjectCard from \"components/ProjectCard\"\nimport { useUpdateLanguage } from \"../hooks/useUpdateLanguage\"\nimport { Link } from \"gatsby-plugin-intl\"\nimport { useSiteMetadata } from \"../hooks/useSiteMetadata\"\n\nconst Hero = styled(\"div\")`\n  padding-top: 2.5em;\n  padding-bottom: 3em;\n  margin-bottom: 6em;\n  max-width: 830px;\n\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\n    margin-bottom: 3em;\n  }\n\n  h1 {\n    margin-bottom: 1em;\n\n    a {\n      text-decoration: none;\n      transition: all 100ms ease-in-out;\n\n      &:nth-of-type(1) {\n        color: ${colors.blue500};\n      }\n      &:nth-of-type(2) {\n        color: ${colors.orange500};\n      }\n      &:nth-of-type(3) {\n        color: ${colors.purple500};\n      }\n      &:nth-of-type(4) {\n        color: ${colors.green500};\n      }\n      &:nth-of-type(5) {\n        color: ${colors.teal500};\n      }\n\n      &:hover {\n        cursor: pointer;\n        transition: all 100ms ease-in-out;\n\n        &:nth-of-type(1) {\n          color: ${colors.blue600};\n          background-color: ${colors.blue200};\n        }\n        &:nth-of-type(2) {\n          color: ${colors.orange600};\n          background-color: ${colors.orange200};\n        }\n        &:nth-of-type(3) {\n          color: ${colors.purple600};\n          background-color: ${colors.purple200};\n        }\n        &:nth-of-type(4) {\n          color: ${colors.green600};\n          background-color: ${colors.green200};\n        }\n        &:nth-of-type(5) {\n          color: ${colors.teal600};\n          background-color: ${colors.teal200};\n        }\n      }\n    }\n  }\n`\n\nconst HeroImage = styled(\"img\")`\n  width: 260px;\n  border-radius: 50%;\n  display: block;\n  margin: 0 auto;\n  transition: transform 300ms ease;\n\n  :hover {\n    transform: scale(1.1);\n  }\n`\n\nconst Section = styled(\"div\")`\n  margin-bottom: 10em;\n  display: flex;\n  flex-direction: column;\n\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\n    margin-bottom: 4em;\n  }\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n`\n\nconst WorkAction = styled(Link)`\n  font-weight: 600;\n  text-decoration: none;\n  color: currentColor;\n  transition: all 150ms ease-in-out;\n  margin-left: auto;\n\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\n    margin: 0 auto;\n  }\n\n  span {\n    margin-left: 1em;\n    transform: translateX(-8px);\n    display: inline-block;\n    transition: transform 400ms ease-in-out;\n  }\n\n  &:hover {\n    color: ${colors.blue500};\n    transition: all 150ms ease-in-out;\n\n    span {\n      transform: translateX(0px);\n      opacity: 1;\n      transition: transform 150ms ease-in-out;\n    }\n  }\n`\n\nexport const Head = () => {\n  const { title, description, author, image } = useSiteMetadata();\n  return (\n    <>\n      <title>{title}</title>\n      <meta name=\"title\" content={title} />\n      <meta name=\"description\" content={description} />\n\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:url\" content=\"http://juanmurillo.co/\" />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n\n      <meta property=\"twitter:creator\" content={author} />\n      <meta property=\"twitter:card\" content=\"summary_large_image\" />\n      <meta property=\"twitter:url\" content=\"http://juanmurillo.co/\" />\n      <meta property=\"twitter:title\" content={title} />\n      <meta property=\"twitter:description\" content={description} />\n      <meta property=\"twitter:image\" content={image} />\n    </>\n  )\n}\n\nconst Homepage = ({ home, projects }) => (\n  <>\n    <Hero>\n      <HeroImage src={home.data.hero_image.url} alt=\"\" />\n      <PrismicRichText field={home.data.hero_title.richText} />\n      <a\n        href=\"https://drive.google.com/file/d/1AKFJ3tXX50QW-UsGw9WfJy30SUCzGggd/view\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Button><PrismicRichText field={home.data.hero_button_text.richText} /></Button>\n      </a>\n    </Hero>\n    <Section>\n      {projects\n        .filter(project => project.node.data.project_is_public)\n        .filter(project => project.node.data.project_is_featured)\n        .map((project, i) => (\n          <ProjectCard\n            key={i}\n            category={project.node.data.project_category}\n            title={project.node.data.project_title}\n            description={project.node.data.project_preview_description}\n            thumbnail={project.node.data.project_preview_thumbnail}\n            uid={project.node.uid}\n          />\n        ))}\n      <WorkAction to={\"/work\"}>\n        See more work <span>&#8594;</span>\n      </WorkAction>\n    </Section>\n    <Section>\n      <PrismicRichText field={home.data.about_title.richText} />\n      <About bio={home.data.about_bio || ''} socialLinks={home.data.about_links} />\n    </Section>\n  </>\n)\n\nconst Component = ({ location }) => {\n  //Required check for no data being returned\n  const { language } = useUpdateLanguage({ location });\n  const data = useStaticQuery(query);\n  const doc = data.allPrismicHomepage.edges.find(edge => edge.node.lang === language.current);\n  const projects = data.allPrismicProject.edges.filter(edge => edge.node.lang === language.current);\n  const meta = data.site.siteMetadata\n\n  if (!doc || !projects) return null\n\n  return (\n    <Layout>\n      <Homepage home={doc.node} projects={projects} meta={meta} />\n    </Layout>\n  )\n}\n\nexport default Component;\n\nHomepage.propTypes = {\n  home: PropTypes.object.isRequired,\n  projects: PropTypes.array.isRequired,\n  meta: PropTypes.object.isRequired,\n}\n\nconst query = graphql`\n  query HomepageQuery {\n    allPrismicHomepage {\n      edges {\n        node {\n          lang\n          alternate_languages {\n            lang\n            document {\n              ... on PrismicHomepage {\n                url\n              }\n            }\n          }\n          data {\n            hero_title {\n              text\n              richText\n            }\n            hero_image {\n              url\n            }\n            hero_button_text {\n              text\n              richText\n            }\n            content {\n              text\n            }\n            about_title {\n              text\n              richText\n            }\n            about_bio {\n              text\n            }\n            about_links {\n              about_link {\n                text\n                richText\n              }\n            }\n          }\n        }\n      }\n    }\n    allPrismicProject {\n      edges {\n        node {\n          lang\n          data {\n            project_title {\n              text\n            }\n            project_preview_description {\n              text\n              richText\n            }\n            project_preview_thumbnail {\n              url\n            }\n            project_category {\n              text\n            }\n            project_post_date(fromNow: true)\n            project_is_public\n            project_is_featured\n          }\n          uid\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        description\n        author\n        image\n      }\n    }\n  }\n`\n","import { graphql, useStaticQuery } from \"gatsby\"\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    {\n      site {\n        siteMetadata {\n          title\n          description\n          author\n          image\n        }\n      }\n    }\n  `)\n\n  return data.site.siteMetadata\n}\n"],"names":["AboutContainer","_styled","target","dimensions","maxwidthTablet","maxwidthMobile","AboutLinkContainer","AboutLink","name","styles","AboutBio","AboutActions","_ref","bio","socialLinks","___EmotionJSX","map","social","i","key","href","about_link","richText","spans","data","url","rel","text","PrismicRichText","field","Button","className","Hero","colors","blue500","orange500","purple500","green500","teal500","blue600","blue200","orange600","orange200","purple600","purple200","green600","green200","teal600","teal200","HeroImage","Section","WorkAction","Link","Head","title","description","author","image","useStaticQuery","site","siteMetadata","React","content","property","Homepage","home","projects","src","hero_image","alt","hero_title","hero_button_text","filter","project","node","project_is_public","project_is_featured","ProjectCard","category","project_category","project_title","project_preview_description","thumbnail","project_preview_thumbnail","uid","to","about_title","About","about_bio","about_links","_ref2","location","language","useUpdateLanguage","query","doc","allPrismicHomepage","edges","find","edge","lang","current","allPrismicProject","meta","Layout"],"sourceRoot":""}