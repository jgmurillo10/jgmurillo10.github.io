{"version":3,"file":"99cc9a0c6b62031fb7c5f5dd4b894273da577168-dce58047f8321a9bff2e.js","mappings":"wLAQA,MAAMA,GAAuBC,EAAAA,EAAAA,GAAOC,EAAAA,GAAI,CAAAC,OAAA,aAAXF,CAAY,mQAalBG,EAAAA,EAAAA,eAAyB,qDAIzBA,EAAAA,EAAAA,eAAyB,uIASjCC,EAAAA,EAAAA,QAAc,qRAsBvBC,GAAqBL,EAAAA,EAAAA,GAAO,MAAK,CAAAE,OAAA,aAAZF,CAAa,sJAYtBI,EAAAA,EAAAA,QAAc,qJAUTD,EAAAA,EAAAA,eAAyB,oBAK1CG,GAAsBN,EAAAA,EAAAA,GAAO,KAAI,CAAAE,OAAA,aAAXF,CAAY,yBAE7BI,EAAAA,EAAAA,QAAc,KAGnBG,GAAmBP,EAAAA,EAAAA,GAAO,KAAI,CAAAE,OAAA,aAAXF,CAAY,CAAAQ,KAAA,SAAAC,OAAA,yCAK/BC,GAAmBV,EAAAA,EAAAA,GAAO,MAAK,CAAAE,OAAA,aAAZF,CAAa,6EAKfG,EAAAA,EAAAA,eAAyB,6BAK1CQ,GAAoBX,EAAAA,EAAAA,GAAO,MAAK,CAAAE,OAAA,aAAZF,CAAa,CAAAQ,KAAA,SAAAC,OAAA,2MAcjCG,GAA4BZ,EAAAA,EAAAA,GAAO,MAAK,CAAAE,OAAA,aAAZF,CAAa,cAC/BI,EAAAA,EAAAA,QAAc,qJASPD,EAAAA,EAAAA,eAAyB,kMAe9BC,EAAAA,EAAAA,QAAc,sKAWPD,EAAAA,EAAAA,eAAyB,0BAsBlD,IAhBoBU,IAAA,IAAC,SAAEC,EAAQ,MAAEC,EAAK,YAAEC,EAAW,UAAEC,EAAS,IAAEC,GAAKL,EAAA,OACnEM,EAAAA,EAAAA,IAACpB,EAAoB,CAACqB,GAAE,SAAWF,IACjCC,EAAAA,EAAAA,IAACd,EAAkB,CAACgB,UAAU,uBAC5BF,EAAAA,EAAAA,IAACb,EAAmB,KAAEQ,EAASQ,OAC/BH,EAAAA,EAAAA,IAACZ,EAAgB,KAAEQ,EAAMO,OACzBH,EAAAA,EAAAA,IAACT,EAAgB,MAACS,EAAAA,EAAAA,IAACI,EAAAA,EAAe,CAACC,MAAOR,EAAYS,aACtDN,EAAAA,EAAAA,IAACR,EAAiB,CAACU,UAAU,qBAAoB,YACvCF,EAAAA,EAAAA,IAAA,YAAM,QAGlBA,EAAAA,EAAAA,IAACP,EAAyB,CAACS,UAAU,8BACnCF,EAAAA,EAAAA,IAAA,OAAKO,IAAKT,EAAUU,IAAKC,IAAKb,EAAMO,QAEjB,C,gGCvKzB,MAAMO,GAAkB7B,EAAAA,EAAAA,GAAO,SAAQ,CAAAE,OAAA,aAAfF,CAAgB,8BAExBI,EAAAA,EAAAA,QAAc,uKAUPD,EAAAA,EAAAA,eAAyB,kLAkBxCC,EAAAA,EAAAA,QAAc,eACdA,EAAAA,EAAAA,UAAgB,kJAYNA,EAAAA,EAAAA,QAAc,UACnBA,EAAAA,EAAAA,QAAc,8DAKPA,EAAAA,EAAAA,QAAc,+CAIjC,IAEK0B,EAAM,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KAQT,OARSC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAAD,EAAAK,UACVC,OAAA,WACE,MAAM,SAAEC,KAAaC,GAAUC,KAAKD,MACpC,OACEnB,EAAAA,EAAAA,IAACU,GAAeW,EAAAA,EAAAA,GAAA,CAACC,QAASF,KAAKD,MAAMG,SAAaH,GAC/CC,KAAKD,MAAMD,SAGlB,EAACP,CAAA,CARS,CAASY,EAAAA,WAWrB,K","sources":["webpack://jgmurillo10/./src/components/ProjectCard.jsx","webpack://jgmurillo10/./src/components/_ui/Button.jsx"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { PrismicRichText } from \"@prismicio/react\"\nimport styled from \"@emotion/styled\"\nimport dimensions from \"styles/dimensions\"\nimport colors from \"styles/colors\"\nimport PropTypes from \"prop-types\"\n\nconst ProjectCardContainer = styled(Link)`\n  display: grid;\n  grid-template-columns: 4fr 7fr;\n  box-shadow: 0px 9px 24px rgba(0, 0, 0, 0.06);\n  margin-bottom: 4em;\n  transition: all 150ms ease-in-out;\n  text-decoration: none;\n  color: currentColor;\n\n  @media (max-width: 950px) {\n    grid-template-columns: 4.5fr 7fr;\n  }\n\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\n    grid-template-columns: 1fr;\n  }\n\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\n    margin-bottom: 2em;\n  }\n\n  &:hover {\n    box-shadow: 0px 9px 24px rgba(0, 0, 0, 0.1);\n    transition: all 150ms ease-in-out;\n\n    .ProjectCardAction {\n      color: ${colors.blue500};\n      transition: all 150ms ease-in-out;\n\n      span {\n        transform: translateX(0px);\n        opacity: 1;\n        transition: transform 150ms ease-in-out;\n      }\n    }\n\n    .ProjectCardContent::before {\n      opacity: 0.02;\n      transition: all 150ms ease-in-out;\n    }\n\n    .ProjectCardImageContainer::before {\n      opacity: 0.2;\n      transition: all 150ms ease-in-out;\n    }\n  }\n`\n\nconst ProjectCardContent = styled(\"div\")`\n  background: white;\n  padding: 4em 3em 2.25em 3em;\n  position: relative;\n\n  &:before {\n    position: absolute;\n    content: \"\";\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    background: ${colors.blue500};\n    mix-blend-mode: multiply;\n    opacity: 0;\n    transition: all 150ms ease-in-out;\n  }\n\n  @media (max-width: 950px) {\n    padding: 3.25em 2.5em 2em 2.5em;\n  }\n\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\n    grid-row: 2;\n  }\n`\n\nconst ProjectCardCategory = styled(\"h6\")`\n  font-weight: 600;\n  color: ${colors.grey600};\n`\n\nconst ProjectCardTitle = styled(\"h3\")`\n  margin-bottom: 0.5em;\n  margin-top: 0.5em;\n`\n\nconst ProjectCardBlurb = styled(\"div\")`\n  margin-bottom: 0.5em;\n  margin-top: 0.5em;\n  margin-bottom: 5em;\n\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\n    margin-bottom: 2.5em;\n  }\n`\n\nconst ProjectCardAction = styled(\"div\")`\n  font-weight: 600;\n  text-decoration: none;\n  color: currentColor;\n  transition: all 150ms ease-in-out;\n\n  span {\n    margin-left: 1em;\n    transform: translateX(-8px);\n    display: inline-block;\n    transition: transform 400ms ease-in-out;\n  }\n`\n\nconst ProjectCardImageContainer = styled(\"div\")`\n  background: ${colors.grey200};\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  overflow: hidden;\n  position: relative;\n  padding-left: 2em;\n  padding-right: 2em;\n\n  @media (max-width: ${dimensions.maxwidthTablet}px) {\n    padding-top: 3em;\n    max-height: 200px;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n  }\n\n  &:before {\n    position: absolute;\n    content: \"\";\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    background: ${colors.blue500};\n    mix-blend-mode: multiply;\n    opacity: 0;\n    transition: all 150ms ease-in-out;\n  }\n\n  img {\n    max-width: 400px;\n    width: 100%;\n    box-shadow: 0px 4px 24px rgba(0, 0, 0, 0.04);\n\n    @media (max-width: ${dimensions.maxwidthTablet}px) {\n      max-width: 300px;\n    }\n  }\n`\n\nconst ProjectCard = ({ category, title, description, thumbnail, uid }) => (\n  <ProjectCardContainer to={`/work/${uid}`}>\n    <ProjectCardContent className=\"ProjectCardContent\">\n      <ProjectCardCategory>{category.text}</ProjectCardCategory>\n      <ProjectCardTitle>{title.text}</ProjectCardTitle>\n      <ProjectCardBlurb><PrismicRichText field={description.richText} /></ProjectCardBlurb>\n      <ProjectCardAction className=\"ProjectCardAction\">\n        Details <span>&#8594;</span>\n      </ProjectCardAction>\n    </ProjectCardContent>\n    <ProjectCardImageContainer className=\"ProjectCardImageContainer\">\n      <img src={thumbnail.url} alt={title.text} />\n    </ProjectCardImageContainer>\n  </ProjectCardContainer>\n)\n\nexport default ProjectCard\n\nProjectCard.propTypes = {\n  category: PropTypes.object.isRequired,\n  thumbnail: PropTypes.object.isRequired,\n  title: PropTypes.object.isRequired,\n  description: PropTypes.object.isRequired,\n  uid: PropTypes.string.isRequired,\n}\n","import React, { Component } from \"react\"\nimport styled from \"@emotion/styled\"\nimport colors from \"./../../styles/colors\"\nimport dimensions from \"./../../styles/dimensions\"\n\nconst ButtonContainer = styled(\"button\")`\n  padding: 1em 2em;\n  background: ${colors.blue400};\n  font-weight: 600;\n  color: white;\n  outline: none;\n  border: none;\n  font-size: 1rem;\n  border-radius: 2px;\n  position: relative;\n  transition: background 100ms ease-in-out;\n\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\n    padding: 0.8em 1.8em;\n    font-size: 1em;\n  }\n\n  p {\n    margin: 0;\n  }\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(\n      135deg,\n      ${colors.pink400} 0%,\n      ${colors.purple400} 100%\n    );\n    z-index: -1;\n  }\n\n  &:hover {\n    cursor: pointer;\n    background: transparent;\n    transition: background 100ms ease-in-out;\n  }\n\n  &.Button--secondary {\n    background: ${colors.blue200};\n    color: ${colors.blue600};\n    padding: 0.95em 1.8em;\n    font-size: 0.95rem;\n\n    &:hover {\n      background: ${colors.blue300};\n      transition: background 100ms ease-in-out;\n    }\n  }\n`\n\nclass Button extends Component {\n  render() {\n    const { children, ...props } = this.props\n    return (\n      <ButtonContainer onClick={this.props.onClick} {...props}>\n        {this.props.children}\n      </ButtonContainer>\n    )\n  }\n}\n\nexport default Button\n"],"names":["ProjectCardContainer","_styled","Link","target","dimensions","colors","ProjectCardContent","ProjectCardCategory","ProjectCardTitle","name","styles","ProjectCardBlurb","ProjectCardAction","ProjectCardImageContainer","_ref","category","title","description","thumbnail","uid","___EmotionJSX","to","className","text","PrismicRichText","field","richText","src","url","alt","ButtonContainer","Button","_Component","apply","arguments","_inheritsLoose","prototype","render","children","props","this","_extends","onClick","Component"],"sourceRoot":""}