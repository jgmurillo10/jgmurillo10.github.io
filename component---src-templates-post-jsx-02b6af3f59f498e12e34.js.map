{"version":3,"file":"component---src-templates-post-jsx-02b6af3f59f498e12e34.js","mappings":"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","sources":["webpack://jgmurillo10/./src/templates/post.jsx"],"sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { graphql } from \"gatsby\"\nimport { PrismicRichText } from \"@prismicio/react\"\nimport styled from \"@emotion/styled\"\nimport colors from \"styles/colors\"\nimport Layout from \"components/Layout\"\nimport Newsletter from \"../components/_ui/Newsletter\"\n\nconst PostHeroContainer = styled(\"div\")`\n  max-height: 500px;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  margin-bottom: 3em;\n\n  img {\n    width: 100%;\n  }\n`\n\nconst PostHeroAnnotation = styled(\"div\")`\n  padding-top: 0.25em;\n\n  h6 {\n    text-align: right;\n    color: ${colors.grey600};\n    font-weight: 400;\n    font-size: 0.85rem;\n  }\n\n  a {\n    color: currentColor;\n  }\n`\n\nconst PostCategory = styled(\"div\")`\n  max-width: 550px;\n  margin: 0 auto;\n  text-align: center;\n  font-weight: 600;\n  color: ${colors.grey600};\n\n  h5 {\n    margin-top: 0;\n    margin-bottom: 1em;\n  }\n`\n\nconst PostTitle = styled(\"div\")`\n  max-width: 550px;\n  margin: 0 auto;\n  text-align: center;\n\n  h1 {\n    margin-top: 0;\n  }\n`\n\nconst PostBody = styled(\"div\")`\n  max-width: 550px;\n  margin: 0 auto;\n\n  .block-img {\n    margin-top: 3.5em;\n    margin-bottom: 0.5em;\n\n    img {\n      width: 100%;\n    }\n  }\n`\n\nconst PostMetas = styled(\"div\")`\n  max-width: 550px;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  margin-bottom: 2em;\n  justify-content: space-between;\n  font-size: 0.85em;\n  color: ${colors.grey600};\n`\n\nconst PostAuthor = styled(\"div\")`\n  margin: 0;\n`\n\nconst PostDate = styled(\"div\")`\n  margin: 0;\n`\n\nconst Post = ({ post, meta }) => {\n  return (\n    <>\n      <Helmet\n        title={`${post.post_title.text} | Blog`}\n        titleTemplate={`%s | ${meta.title}`}\n        meta={[\n          {\n            name: `description`,\n            content: meta.description,\n          },\n          {\n            property: `og:title`,\n            content: `${post.post_title.text} | Blog`,\n          },\n          {\n            property: `og:description`,\n            content: meta.description,\n          },\n          {\n            property: `og:type`,\n            content: `website`,\n          },\n          {\n            name: `twitter:card`,\n            content: `summary`,\n          },\n          {\n            name: `twitter:creator`,\n            content: meta.author,\n          },\n          {\n            name: `twitter:title`,\n            content: meta.title,\n          },\n          {\n            name: `twitter:description`,\n            content: meta.description,\n          },\n          {\n            property: `og:image`,\n            content: post.post_meta_image.url || meta.image,\n          },\n          {\n            property: `twitter:image`,\n            content: post.post_meta_image.url || meta.image,\n          },\n        ].concat(meta)}\n      />\n      <Layout>\n        <PostCategory><PrismicRichText field={post.post_category.richText} /></PostCategory>\n        <PostTitle><PrismicRichText field={post.post_title.richText} /></PostTitle>\n        <PostMetas>\n          <PostAuthor>{post.post_author}</PostAuthor>\n          <PostDate>\n            {post.post_date}\n          </PostDate>\n        </PostMetas>\n        {post.post_hero_image && (\n          <PostHeroContainer>\n            <img src={post.post_hero_image.url} alt=\"bees\" />\n            <PostHeroAnnotation>\n              <PrismicRichText field={post.post_hero_annotation.richText} />\n            </PostHeroAnnotation>\n          </PostHeroContainer>\n        )}\n        <PostBody><PrismicRichText field={post.post_body.richText} /></PostBody>\n        <Newsletter\n          body={`Si te gustó este post agrega tu mail aquí abajo y dale \"Submit\" para mantenerte al tanto`}\n        />\n      </Layout>\n    </>\n  )\n}\n\nconst Component = ({ data }) => {\n  const postContent = data.prismicPost.data\n  const meta = data.site.siteMetadata\n  return <Post post={postContent} meta={meta} />\n}\n\nexport default Component;\n\nPost.propTypes = {\n  post: PropTypes.object.isRequired,\n  meta: PropTypes.object.isRequired,\n}\n\nexport const query = graphql`\n  query PostQuery($uid: String) {\n    prismicPost(uid: {eq: $uid}) {\n      id\n      uid\n      data {\n        post_author\n        post_title {\n          richText\n          text\n        }\n        post_hero_annotation {\n          richText\n        }\n        post_hero_image {\n          url\n        }\n        post_meta_image {\n          url\n        }\n        post_date(fromNow: true)\n        post_category {\n          richText\n        }\n        post_preview_description {\n          text\n        }\n        post_body {\n          richText\n          text\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        description\n        author\n        image\n      }\n    }\n  }\n`\n"],"names":["PostHeroContainer","_styled","target","name","styles","PostHeroAnnotation","colors","PostCategory","PostTitle","PostBody","PostMetas","PostAuthor","PostDate","Post","_ref","post","meta","___EmotionJSX","React","Helmet","title","post_title","text","titleTemplate","content","description","property","author","post_meta_image","url","image","concat","Layout","PrismicRichText","field","post_category","richText","post_author","post_date","post_hero_image","src","alt","post_hero_annotation","post_body","Newsletter","body","_ref2","data","postContent","prismicPost","site","siteMetadata"],"sourceRoot":""}