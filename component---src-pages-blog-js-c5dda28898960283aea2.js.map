{"version":3,"file":"component---src-pages-blog-js-c5dda28898960283aea2.js","mappings":"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","sources":["webpack://jgmurillo10/./src/components/PostCard.jsx","webpack://jgmurillo10/./src/pages/blog.js"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { PrismicRichText } from \"@prismicio/react\"\nimport styled from \"@emotion/styled\"\nimport colors from \"styles/colors\"\nimport PropTypes from \"prop-types\"\n\nconst PostCardContainer = styled(Link)`\n  border: 1px solid ${colors.grey200};\n  padding: 3em 2.5em 2.25em 2.5em;\n  border-radius: 3px;\n  text-decoration: none;\n  color: currentColor;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 0px 9px 24px rgba(0, 0, 0, 0.06);\n  transition: all 150ms ease-in-out;\n\n  &:hover {\n    box-shadow: 0px 9px 24px rgba(0, 0, 0, 0.1);\n    transition: all 150ms ease-in-out;\n    cursor: pointer;\n\n    .PostCardAction {\n      color: ${colors.blue500};\n      transition: all 150ms ease-in-out;\n\n      span {\n        transform: translateX(0px);\n        opacity: 1;\n        transition: transform 150ms ease-in-out;\n      }\n    }\n  }\n`\n\nconst PostCategory = styled(\"h6\")`\n  font-weight: 600;\n  color: ${colors.grey600};\n`\n\nconst PostTitle = styled(\"h3\")`\n  margin: 0;\n  margin-top: 0.5em;\n`\n\nconst PostMetas = styled(\"div\")`\n  display: flex;\n  align-items: center;\n  margin-top: 1.5em;\n  justify-content: space-between;\n  font-size: 0.85em;\n  color: ${colors.grey600};\n`\n\nconst PostAuthor = styled(\"div\")`\n  margin: 0;\n`\n\nconst PostDate = styled(\"div\")`\n  margin: 0;\n`\n\nconst PostDescription = styled(\"div\")`\n  margin-top: 2em;\n  margin-bottom: 4em;\n\n  p:last-of-type {\n    margin: 0;\n  }\n`\n\nconst PostCardAction = styled(\"div\")`\n  font-weight: 600;\n  text-decoration: none;\n  color: currentColor;\n  transition: all 150ms ease-in-out;\n\n  span {\n    margin-left: 1em;\n    transform: translateX(-8px);\n    display: inline-block;\n    transition: transform 400ms ease-in-out;\n  }\n`\n\nconst PostCard = ({ author, category, date, title, description, uid }) => (\n  <PostCardContainer className=\"BlogPostCard\" to={`/blog/${uid}`}>\n    <PostCategory>{category.text}</PostCategory>\n    <PostTitle>{title.text}</PostTitle>\n    <PostDescription><PrismicRichText field={description.richText} /></PostDescription>\n    <PostCardAction className=\"PostCardAction\">\n      Read more <span>&#8594;</span>\n    </PostCardAction>\n    <PostMetas>\n      <PostAuthor>{author}</PostAuthor>\n      <PostDate>{date}</PostDate>\n    </PostMetas>\n  </PostCardContainer>\n)\n\nexport default PostCard\n\nPostCard.propTypes = {\n  author: PropTypes.string.isRequired,\n  category: PropTypes.object.isRequired,\n  date: PropTypes.string.isRequired,\n  title: PropTypes.object.isRequired,\n  description: PropTypes.object.isRequired,\n  uid: PropTypes.string.isRequired,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport dimensions from \"styles/dimensions\"\nimport Layout from \"components/Layout\"\nimport PostCard from \"components/PostCard\"\n\nconst BlogTitle = styled(\"h1\")`\n  margin-bottom: 1em;\n`\n\nconst BlogGrid = styled(\"div\")`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 2.5em;\n\n  @media (max-width: 1050px) {\n    grid-template-columns: repeat(2, 1fr);\n    grid-gap: 1.5em;\n  }\n\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\n    grid-template-columns: 1fr;\n    grid-gap: 2.5em;\n  }\n`\n\nconst Blog = ({ posts, meta }) => (\n  <>\n    <Helmet\n      title={`Blog | Juan Murillo`}\n      meta={[\n        {\n          name: `description`,\n          content: meta.description,\n        },\n        {\n          property: `og:title`,\n          content: `Blog | Juan Murillo`,\n        },\n        {\n          property: `og:description`,\n          content: meta.description,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: meta.author,\n        },\n        {\n          name: `twitter:title`,\n          content: meta.title,\n        },\n        {\n          name: `twitter:description`,\n          content: meta.description,\n        },\n        {\n          property: `og:image`,\n          content: meta.image,\n        },\n        {\n          property: `twitter:image`,\n          content: meta.image,\n        },\n      ].concat(meta)}\n    />\n    <Layout>\n      <BlogTitle>Blog</BlogTitle>\n      <BlogGrid>\n        {posts.map((post, i) => (\n          <PostCard\n            key={i}\n            author={post.node.data.post_author}\n            category={post.node.data.post_category}\n            title={post.node.data.post_title}\n            date={post.node.data.post_date}\n            description={post.node.data.post_preview_description}\n            uid={post.node.uid}\n          />\n        ))}\n      </BlogGrid>\n    </Layout>\n  </>\n)\n\nconst Component = ({ data }) => {\n  const posts = data.allPrismicPost.edges\n  const meta = data.site.siteMetadata\n  if (!posts) return null\n\n  return <Blog posts={posts} meta={meta} />\n}\nexport default Component;\n\nBlog.propTypes = {\n  posts: PropTypes.array.isRequired,\n  meta: PropTypes.object.isRequired,\n}\n\nexport const query = graphql`\n  {\n    allPrismicPost(sort: {last_publication_date: DESC}) {\n      edges {\n        node {\n          id\n          data {\n            post_author\n            post_title {\n              text\n            }\n            post_date(fromNow: true)\n            post_category {\n              text\n            }\n            post_preview_description {\n              text\n              richText\n            }\n          }\n          uid\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        description\n        author\n        image\n      }\n    }\n  }\n`\n"],"names":["PostCardContainer","_styled","Link","target","colors","grey200","blue500","PostCategory","grey600","PostTitle","name","styles","PostMetas","PostAuthor","PostDate","PostDescription","PostCardAction","_ref","author","category","date","title","description","uid","___EmotionJSX","className","to","text","PrismicRichText","field","richText","BlogTitle","BlogGrid","dimensions","maxwidthMobile","Blog","posts","meta","React","Helmet","content","property","image","concat","Layout","map","post","i","PostCard","key","node","data","post_author","post_category","post_title","post_date","post_preview_description","_ref2","allPrismicPost","edges","site","siteMetadata"],"sourceRoot":""}