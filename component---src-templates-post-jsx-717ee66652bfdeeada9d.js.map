{"version":3,"file":"component---src-templates-post-jsx-717ee66652bfdeeada9d.js","mappings":"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","sources":["webpack://jgmurillo10/./src/templates/post.jsx"],"sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { graphql } from \"gatsby\"\nimport { PrismicRichText } from \"@prismicio/react\"\nimport styled from \"@emotion/styled\"\nimport colors from \"styles/colors\"\nimport Layout from \"components/Layout\"\nimport Newsletter from \"../components/_ui/Newsletter\"\nimport { useUpdateLanguage } from \"../hooks/useUpdateLanguage\"\nimport { useIntl } from \"gatsby-plugin-intl\";\n\nconst PostHeroContainer = styled(\"div\")`\n  max-height: 500px;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  margin-bottom: 3em;\n\n  img {\n    width: 100%;\n  }\n`\n\nconst PostHeroAnnotation = styled(\"div\")`\n  padding-top: 0.25em;\n\n  h6 {\n    text-align: right;\n    color: ${colors.grey600};\n    font-weight: 400;\n    font-size: 0.85rem;\n  }\n\n  a {\n    color: currentColor;\n  }\n`\n\nconst PostCategory = styled(\"div\")`\n  max-width: 550px;\n  margin: 0 auto;\n  text-align: center;\n  font-weight: 600;\n  color: ${colors.grey600};\n\n  h5 {\n    margin-top: 0;\n    margin-bottom: 1em;\n  }\n`\n\nconst PostTitle = styled(\"div\")`\n  max-width: 550px;\n  margin: 0 auto;\n  text-align: center;\n\n  h1 {\n    margin-top: 0;\n  }\n`\n\nconst PostBody = styled(\"div\")`\n  max-width: 550px;\n  margin: 0 auto;\n\n  .block-img {\n    margin-top: 3.5em;\n    margin-bottom: 0.5em;\n\n    img {\n      width: 100%;\n    }\n  }\n`\n\nconst PostMetas = styled(\"div\")`\n  max-width: 550px;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  margin-bottom: 2em;\n  justify-content: space-between;\n  font-size: 0.85em;\n  color: ${colors.grey600};\n`\n\nconst PostAuthor = styled(\"div\")`\n  margin: 0;\n`\n\nconst PostDate = styled(\"div\")`\n  margin: 0;\n`\n\nconst Post = ({ post, meta }) => {\n  const { formatMessage } = useIntl();\n  return (\n    <>\n      <Helmet\n        title={`${post.post_title.text} | Blog`}\n        titleTemplate={`%s | ${meta.title}`}\n        meta={[\n          {\n            name: `description`,\n            content: meta.description,\n          },\n          {\n            property: `og:title`,\n            content: `${post.post_title.text} | Blog`,\n          },\n          {\n            property: `og:description`,\n            content: meta.description,\n          },\n          {\n            property: `og:type`,\n            content: `website`,\n          },\n          {\n            name: `twitter:card`,\n            content: `summary`,\n          },\n          {\n            name: `twitter:creator`,\n            content: meta.author,\n          },\n          {\n            name: `twitter:title`,\n            content: meta.title,\n          },\n          {\n            name: `twitter:description`,\n            content: meta.description,\n          },\n          {\n            property: `og:image`,\n            content: post.post_meta_image.url || meta.image,\n          },\n          {\n            property: `twitter:image`,\n            content: post.post_meta_image.url || meta.image,\n          },\n        ].concat(meta)}\n      />\n      <Layout>\n        <PostCategory><PrismicRichText field={post.post_category.richText} /></PostCategory>\n        <PostTitle><PrismicRichText field={post.post_title.richText} /></PostTitle>\n        <PostMetas>\n          <PostAuthor>{post.post_author}</PostAuthor>\n          <PostDate>\n            {post.post_date}\n          </PostDate>\n        </PostMetas>\n        {post.post_hero_image && (\n          <PostHeroContainer>\n            <img src={post.post_hero_image.url} alt=\"bees\" />\n            <PostHeroAnnotation>\n              <PrismicRichText field={post.post_hero_annotation.richText} />\n            </PostHeroAnnotation>\n          </PostHeroContainer>\n        )}\n        <PostBody><PrismicRichText field={post.post_body.richText} /></PostBody>\n        <Newsletter\n          body={formatMessage({ id: \"newsletter\" })}\n        />\n      </Layout>\n    </>\n  )\n}\n\nconst Component = ({ data, location }) => {\n  const { language } = useUpdateLanguage({ doc: data.prismicPost, location })\n  const postContent = data.allPrismicPost.edges.find(edge => edge.node.lang === language.current)?.node.data;\n  const meta = data.site.siteMetadata\n  return <Post post={postContent || data.allPrismicPost.edges[0].node.data} meta={meta} />\n}\n\nexport default Component;\n\nPost.propTypes = {\n  post: PropTypes.object.isRequired,\n  meta: PropTypes.object.isRequired,\n}\n\nexport const query = graphql`\n  query PostQuery($uid: String) {\n    allPrismicPost(filter: { uid: { eq: $uid } }) {\n      edges {\n        node {\n          id\n          uid\n          lang\n          alternate_languages {\n            lang\n            document {\n              ... on PrismicPost {\n                url\n              }\n            }\n          }\n          data {\n            post_author\n            post_title {\n              richText\n              text\n            }\n            post_hero_annotation {\n              richText\n            }\n            post_hero_image {\n              url\n            }\n            post_meta_image {\n              url\n            }\n            post_date(fromNow: true)\n            post_category {\n              richText\n            }\n            post_preview_description {\n              text\n            }\n            post_body {\n              richText\n              text\n            }\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        description\n        author\n        image\n      }\n    }\n  }\n`\n"],"names":["PostHeroContainer","_styled","target","name","styles","PostHeroAnnotation","colors","grey600","PostCategory","PostTitle","PostBody","PostMetas","PostAuthor","PostDate","Post","_ref","post","meta","formatMessage","useIntl","___EmotionJSX","React","Helmet","title","post_title","text","titleTemplate","content","description","property","author","post_meta_image","url","image","concat","Layout","PrismicRichText","field","post_category","richText","post_author","post_date","post_hero_image","src","alt","post_hero_annotation","post_body","Newsletter","body","id","_ref2","_data$allPrismicPost$","data","location","language","useUpdateLanguage","doc","prismicPost","postContent","allPrismicPost","edges","find","edge","node","lang","current","site","siteMetadata"],"sourceRoot":""}