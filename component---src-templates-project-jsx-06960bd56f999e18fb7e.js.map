{"version":3,"file":"component---src-templates-project-jsx-06960bd56f999e18fb7e.js","mappings":"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","sources":["webpack://jgmurillo10/./src/components/_ui/Button.jsx","webpack://jgmurillo10/./src/templates/project.jsx"],"sourcesContent":["import React, { Component } from \"react\"\nimport styled from \"@emotion/styled\"\nimport colors from \"./../../styles/colors\"\nimport dimensions from \"./../../styles/dimensions\"\n\nconst ButtonContainer = styled(\"button\")`\n  padding: 1em 2em;\n  background: ${colors.blue400};\n  font-weight: 600;\n  color: white;\n  outline: none;\n  border: none;\n  font-size: 1rem;\n  border-radius: 2px;\n  position: relative;\n  transition: background 100ms ease-in-out;\n\n  @media (max-width: ${dimensions.maxwidthMobile}px) {\n    padding: 0.8em 1.8em;\n    font-size: 1em;\n  }\n\n  p {\n    margin: 0;\n  }\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(\n      135deg,\n      ${colors.pink400} 0%,\n      ${colors.purple400} 100%\n    );\n    z-index: -1;\n  }\n\n  &:hover {\n    cursor: pointer;\n    background: transparent;\n    transition: background 100ms ease-in-out;\n  }\n\n  &.Button--secondary {\n    background: ${colors.blue200};\n    color: ${colors.blue600};\n    padding: 0.95em 1.8em;\n    font-size: 0.95rem;\n\n    &:hover {\n      background: ${colors.blue300};\n      transition: background 100ms ease-in-out;\n    }\n  }\n`\n\nclass Button extends Component {\n  render() {\n    const { children, ...props } = this.props\n    return (\n      <ButtonContainer onClick={this.props.onClick} {...props}>\n        {this.props.children}\n      </ButtonContainer>\n    )\n  }\n}\n\nexport default Button\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"@emotion/styled\"\nimport colors from \"styles/colors\"\nimport { graphql } from \"gatsby\"\nimport { PrismicRichText } from \"@prismicio/react\"\nimport Button from \"components/_ui/Button\"\nimport Layout from \"components/Layout\"\nimport Newsletter from \"../components/_ui/Newsletter\"\nimport { useUpdateLanguage } from \"../hooks/useUpdateLanguage\"\nimport { useIntl, FormattedMessage, Link } from \"gatsby-plugin-intl\"\nimport { Head as HeadBase } from \"../components/Head\";\n\nconst ProjectHeroContainer = styled(\"div\")`\n  background: ${colors.grey200};\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  overflow: hidden;\n  position: relative;\n  padding-top: 2.25em;\n  margin-bottom: 3.5em;\n\n  img {\n    max-width: 600px;\n  }\n`\n\nconst ProjectTitle = styled(\"div\")`\n  max-width: 550px;\n  margin: 0 auto;\n  text-align: center;\n`\n\nconst ProjectBody = styled(\"div\")`\n  max-width: 550px;\n  margin: 0 auto;\n\n  .block-img {\n    margin-top: 3.5em;\n    margin-bottom: 0.5em;\n\n    img {\n      width: 100%;\n    }\n  }\n`\n\nconst WorkLink = styled(Link)`\n  margin-top: 3em;\n  display: block;\n  text-align: center;\n`\n\nconst StackPill = styled(\"span\")`\n  background-color: #f2f2f2;\n  border-radius: 32px;\n  margin: 8px;\n  padding: 8px 16px;\n`\n\nconst ProjectStack = styled(\"div\")`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 24px 0;\n  justify-content: center;\n`\n\nexport const Head = ({ data, location }) => {\n  const { language } = useUpdateLanguage({ doc: data.prismicProject, location })\n  const fallbackProject = data.allPrismicProject.edges[0].node.data\n  const projectContent = data.allPrismicProject.edges.find(edge => edge.node.lang === language.current)?.node.data || fallbackProject\n\n  return (\n    <HeadBase\n      title={projectContent.project_title.text + ' | Projects | Juan Murillo'}\n      description={projectContent.project_preview_description.text}\n      image={projectContent.project_preview_thumbnail.url}\n    />\n  )\n}\n\nconst Project = ({ project }) => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <Layout>\n      <ProjectTitle><PrismicRichText field={project.project_title.richText} /></ProjectTitle>\n      <ProjectStack>\n        {project.stack.map(({ technology }) => (\n          <StackPill key={technology.text}>{technology.text}</StackPill>\n        ))}\n      </ProjectStack>\n      {project.project_hero_image && (\n        <ProjectHeroContainer>\n          <img src={project.project_hero_image.url} alt=\"bees\" />\n        </ProjectHeroContainer>\n      )}\n      <ProjectBody>\n        <PrismicRichText field={project.project_description.richText} />\n        <WorkLink to={\"/work\"}>\n          <Button className=\"Button--secondary\"><FormattedMessage id=\"moreWork\" /></Button>\n        </WorkLink>\n      </ProjectBody>\n      <Newsletter\n        body={formatMessage({ id: \"subscribeDescription\" })}\n      />\n    </Layout>\n  )\n}\n\nconst Component = ({ data, location }) => {\n  const { language } = useUpdateLanguage({ location })\n  const projectContent = data.allPrismicProject.edges.find(edge => edge.node.lang === language.current)?.node.data;\n\n  return <Project project={projectContent || data.allPrismicProject.edges[0].node.data} />\n}\n\nexport default Component;\n\nProject.propTypes = {\n  project: PropTypes.object.isRequired,\n}\n\nexport const query = graphql`\n  query ProjectQuery($uid: String) {\n    allPrismicProject(filter: { uid: { eq: $uid } }) {\n      edges {\n        node {\n          uid\n          lang\n          alternate_languages {\n            lang\n            document {\n              ... on PrismicProject {\n                url\n              }\n            }\n          }\n          data {\n            project_title {\n              text\n              richText\n            }\n            project_preview_description {\n              text\n            }\n            project_preview_thumbnail {\n              url\n            }\n            project_category {\n              text\n            }\n            project_post_date(fromNow: true)\n            project_is_public\n            project_is_featured\n            project_hero_image {\n              url\n            }\n            project_description {\n              richText\n            }\n            stack {\n              technology {\n                text\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["ButtonContainer","_styled","target","colors","blue400","dimensions","maxwidthMobile","pink400","purple400","blue200","blue600","blue300","Button","_Component","apply","arguments","_inheritsLoose","prototype","render","children","props","this","___EmotionJSX","_extends","onClick","Component","ProjectHeroContainer","grey200","ProjectTitle","name","styles","ProjectBody","WorkLink","Link","StackPill","ProjectStack","Head","_ref","_data$allPrismicProje","data","location","language","useUpdateLanguage","doc","prismicProject","fallbackProject","allPrismicProject","edges","node","projectContent","find","edge","lang","current","HeadBase","title","project_title","text","description","project_preview_description","image","project_preview_thumbnail","url","Project","_ref2","project","formatMessage","useIntl","Layout","PrismicRichText","field","richText","stack","map","_ref3","technology","key","project_hero_image","src","alt","project_description","to","className","FormattedMessage","id","Newsletter","body","_ref4","_data$allPrismicProje2"],"sourceRoot":""}