{"version":3,"file":"d87891e7fd55e414a9c160d88a426f6ca6b0711b-aaea8f026c6a50aeb267.js","mappings":"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","sources":["webpack://jgmurillo10/./node_modules/@prismicio/richtext/dist/composeSerializers.js","webpack://jgmurillo10/./node_modules/@prismicio/types/dist/value/richText.js","webpack://jgmurillo10/./node_modules/@prismicio/richtext/dist/types.js","webpack://jgmurillo10/./node_modules/@prismicio/richtext/dist/wrapMapSerializer.js","webpack://jgmurillo10/./node_modules/@prismicio/richtext/dist/asTree.js","webpack://jgmurillo10/./node_modules/@prismicio/richtext/dist/serialize.js","webpack://jgmurillo10/./node_modules/@prismicio/react/dist/_node_modules/@prismicio/client/dist/types/value/link.js","webpack://jgmurillo10/./node_modules/@prismicio/react/dist/_node_modules/@prismicio/client/dist/helpers/asLink.js","webpack://jgmurillo10/./node_modules/@prismicio/react/dist/_node_modules/@prismicio/client/dist/helpers/documentToLinkField.js","webpack://jgmurillo10/./node_modules/@prismicio/react/dist/_node_modules/@prismicio/client/dist/helpers/isFilled.js","webpack://jgmurillo10/./node_modules/@prismicio/react/dist/_node_modules/@prismicio/client/dist/helpers/asLinkAttrs.js","webpack://jgmurillo10/./node_modules/@prismicio/react/dist/_node_modules/@prismicio/client/dist/lib/isInternalURL.js","webpack://jgmurillo10/./node_modules/@prismicio/react/dist/react-server/PrismicLink.js","webpack://jgmurillo10/./node_modules/@prismicio/react/dist/lib/isInternalURL.js","webpack://jgmurillo10/./node_modules/@prismicio/react/dist/react-server/PrismicRichText.js","webpack://jgmurillo10/./node_modules/@prismicio/react/dist/PrismicProvider.js","webpack://jgmurillo10/./node_modules/@prismicio/react/dist/PrismicRichText.js","webpack://jgmurillo10/./node_modules/@prismicio/react/dist/usePrismicContext.js","webpack://jgmurillo10/./src/components/Head.tsx","webpack://jgmurillo10/./src/hooks/useSiteMetadata.ts","webpack://jgmurillo10/./src/hooks/useUpdateLanguage.tsx"],"sourcesContent":["const composeSerializers = (...serializers) => {\n  return (...args) => {\n    for (let i = 0; i < serializers.length; i++) {\n      const serializer = serializers[i];\n      if (serializer) {\n        const res = serializer(...args);\n        if (res != null) {\n          return res;\n        }\n      }\n    }\n  };\n};\nexport {\n  composeSerializers\n};\n//# sourceMappingURL=composeSerializers.js.map\n","const RichTextNodeType = {\n  heading1: \"heading1\",\n  heading2: \"heading2\",\n  heading3: \"heading3\",\n  heading4: \"heading4\",\n  heading5: \"heading5\",\n  heading6: \"heading6\",\n  paragraph: \"paragraph\",\n  preformatted: \"preformatted\",\n  strong: \"strong\",\n  em: \"em\",\n  listItem: \"list-item\",\n  oListItem: \"o-list-item\",\n  list: \"group-list-item\",\n  oList: \"group-o-list-item\",\n  image: \"image\",\n  embed: \"embed\",\n  hyperlink: \"hyperlink\",\n  label: \"label\",\n  span: \"span\"\n};\nexport {\n  RichTextNodeType\n};\n//# sourceMappingURL=richText.js.map\n","import { RichTextNodeType } from \"@prismicio/types\";\nconst RichTextReversedNodeType = {\n  [RichTextNodeType.listItem]: \"listItem\",\n  [RichTextNodeType.oListItem]: \"oListItem\",\n  [RichTextNodeType.list]: \"list\",\n  [RichTextNodeType.oList]: \"oList\"\n};\nexport {\n  RichTextReversedNodeType\n};\n//# sourceMappingURL=types.js.map\n","import { RichTextReversedNodeType } from \"./types.js\";\nconst wrapMapSerializer = (mapSerializer) => {\n  return (type, node, text, children, key) => {\n    const tagSerializer = mapSerializer[RichTextReversedNodeType[type] || type];\n    if (tagSerializer) {\n      return tagSerializer({\n        // @ts-expect-error cannot type check here\n        type,\n        // @ts-expect-error cannot type check here\n        node,\n        // @ts-expect-error cannot type check here\n        text,\n        // @ts-expect-error cannot type check here\n        children,\n        // @ts-expect-error cannot type check here\n        key\n      });\n    }\n  };\n};\nexport {\n  wrapMapSerializer\n};\n//# sourceMappingURL=wrapMapSerializer.js.map\n","import { RichTextNodeType } from \"@prismicio/types\";\nconst uuid = () => {\n  return (++uuid.i).toString();\n};\nuuid.i = 0;\nconst asTree = (nodes) => {\n  const preparedNodes = prepareNodes(nodes);\n  const children = [];\n  for (let i = 0; i < preparedNodes.length; i++) {\n    children.push(nodeToTreeNode(preparedNodes[i]));\n  }\n  return {\n    key: uuid(),\n    children\n  };\n};\nconst createTreeNode = (node, children = []) => {\n  return {\n    key: uuid(),\n    type: node.type,\n    text: \"text\" in node ? node.text : void 0,\n    node,\n    children\n  };\n};\nconst createTextTreeNode = (text) => {\n  return createTreeNode({\n    type: RichTextNodeType.span,\n    text,\n    spans: []\n  });\n};\nconst prepareNodes = (nodes) => {\n  const mutNodes = nodes.slice(0);\n  for (let i = 0; i < mutNodes.length; i++) {\n    const node = mutNodes[i];\n    if (node.type === RichTextNodeType.listItem || node.type === RichTextNodeType.oListItem) {\n      const items = [\n        node\n      ];\n      while (mutNodes[i + 1] && mutNodes[i + 1].type === node.type) {\n        items.push(mutNodes[i + 1]);\n        mutNodes.splice(i, 1);\n      }\n      if (node.type === RichTextNodeType.listItem) {\n        mutNodes[i] = {\n          type: RichTextNodeType.list,\n          items\n        };\n      } else {\n        mutNodes[i] = {\n          type: RichTextNodeType.oList,\n          items\n        };\n      }\n    }\n  }\n  return mutNodes;\n};\nconst nodeToTreeNode = (node) => {\n  if (\"text\" in node) {\n    return createTreeNode(node, textNodeSpansToTreeNodeChildren(node.spans, node));\n  }\n  if (\"items\" in node) {\n    const children = [];\n    for (let i = 0; i < node.items.length; i++) {\n      children.push(nodeToTreeNode(node.items[i]));\n    }\n    return createTreeNode(node, children);\n  }\n  return createTreeNode(node);\n};\nconst textNodeSpansToTreeNodeChildren = (spans, node, parentSpan) => {\n  if (!spans.length) {\n    return [createTextTreeNode(node.text)];\n  }\n  const mutSpans = spans.slice(0);\n  mutSpans.sort((a, b) => a.start - b.start || b.end - a.end);\n  const children = [];\n  for (let i = 0; i < mutSpans.length; i++) {\n    const span = mutSpans[i];\n    const parentSpanStart = parentSpan && parentSpan.start || 0;\n    const spanStart = span.start - parentSpanStart;\n    const spanEnd = span.end - parentSpanStart;\n    const text = node.text.slice(spanStart, spanEnd);\n    const childSpans = [];\n    for (let j = i; j < mutSpans.length; j++) {\n      const siblingSpan = mutSpans[j];\n      if (siblingSpan !== span) {\n        if (siblingSpan.start >= span.start && siblingSpan.end <= span.end) {\n          childSpans.push(siblingSpan);\n          mutSpans.splice(j, 1);\n          j--;\n        } else if (siblingSpan.start < span.end && siblingSpan.end > span.start) {\n          childSpans.push({\n            ...siblingSpan,\n            end: span.end\n          });\n          mutSpans[j] = {\n            ...siblingSpan,\n            start: span.end\n          };\n        }\n      }\n    }\n    if (i === 0 && spanStart > 0) {\n      children.push(createTextTreeNode(node.text.slice(0, spanStart)));\n    }\n    const spanWithText = { ...span, text };\n    children.push(createTreeNode(spanWithText, textNodeSpansToTreeNodeChildren(childSpans, {\n      ...node,\n      text\n    }, span)));\n    if (spanEnd < node.text.length) {\n      children.push(createTextTreeNode(node.text.slice(spanEnd, mutSpans[i + 1] ? mutSpans[i + 1].start - parentSpanStart : void 0)));\n    }\n  }\n  return children;\n};\nexport {\n  asTree\n};\n//# sourceMappingURL=asTree.js.map\n","import { asTree } from \"./asTree.js\";\nconst serialize = (richTextField, serializer) => {\n  return serializeTreeNodes(asTree(richTextField).children, serializer);\n};\nconst serializeTreeNodes = (nodes, serializer) => {\n  const serializedTreeNodes = [];\n  for (let i = 0; i < nodes.length; i++) {\n    const treeNode = nodes[i];\n    const serializedTreeNode = serializer(treeNode.type, treeNode.node, treeNode.text, serializeTreeNodes(treeNode.children, serializer), treeNode.key);\n    if (serializedTreeNode != null) {\n      serializedTreeNodes.push(serializedTreeNode);\n    }\n  }\n  return serializedTreeNodes;\n};\nexport {\n  serialize\n};\n//# sourceMappingURL=serialize.js.map\n","const LinkType = {\n  Any: \"Any\",\n  Document: \"Document\",\n  Media: \"Media\",\n  Web: \"Web\"\n};\nexport {\n  LinkType\n};\n//# sourceMappingURL=link.js.map\n","import { LinkType } from \"../types/value/link.js\";\nimport { documentToLinkField } from \"./documentToLinkField.js\";\nconst asLink = (linkFieldOrDocument, ...configObjectOrTuple) => {\n  if (!linkFieldOrDocument) {\n    return null;\n  }\n  const linkField = (\n    // prettier-ignore\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore - Bug in TypeScript 4.9: https://github.com/microsoft/TypeScript/issues/51501\n    // TODO: Remove the `prettier-ignore` comment when this bug is fixed.\n    \"link_type\" in linkFieldOrDocument ? linkFieldOrDocument : documentToLinkField(linkFieldOrDocument)\n  );\n  const [configObjectOrLinkResolver] = configObjectOrTuple;\n  let config;\n  if (typeof configObjectOrLinkResolver === \"function\" || configObjectOrLinkResolver == null) {\n    config = {\n      linkResolver: configObjectOrLinkResolver\n    };\n  } else {\n    config = { ...configObjectOrLinkResolver };\n  }\n  switch (linkField.link_type) {\n    case LinkType.Media:\n    case LinkType.Web:\n      return \"url\" in linkField ? linkField.url : null;\n    case LinkType.Document: {\n      if (\"id\" in linkField && config.linkResolver) {\n        const resolvedURL = config.linkResolver(linkField);\n        if (resolvedURL != null) {\n          return resolvedURL;\n        }\n      }\n      if (\"url\" in linkField && linkField.url) {\n        return linkField.url;\n      }\n      return null;\n    }\n    case LinkType.Any:\n    default:\n      return null;\n  }\n};\nexport {\n  asLink\n};\n//# sourceMappingURL=asLink.js.map\n","import { LinkType } from \"../types/value/link.js\";\nconst documentToLinkField = (prismicDocument) => {\n  var _a;\n  return {\n    link_type: LinkType.Document,\n    id: prismicDocument.id,\n    uid: prismicDocument.uid || void 0,\n    type: prismicDocument.type,\n    tags: prismicDocument.tags,\n    lang: prismicDocument.lang,\n    url: prismicDocument.url == null ? void 0 : prismicDocument.url,\n    slug: (_a = prismicDocument.slugs) == null ? void 0 : _a[0],\n    // The REST API does not include a `data` property if the data\n    // object is empty.\n    //\n    // A presence check for `prismicDocument.data` is done to\n    // support partial documents. While `documentToLinkField` is\n    // not typed to accept partial documents, passing a partial\n    // document can happen in untyped projects.\n    ...prismicDocument.data && Object.keys(prismicDocument.data).length > 0 ? { data: prismicDocument.data } : {}\n  };\n};\nexport {\n  documentToLinkField\n};\n//# sourceMappingURL=documentToLinkField.js.map\n","const isNonNullish = (input) => {\n  return input != null;\n};\nconst richText = (field) => {\n  if (!isNonNullish(field)) {\n    return false;\n  } else if (field.length === 1 && \"text\" in field[0]) {\n    return !!field[0].text;\n  } else {\n    return !!field.length;\n  }\n};\nconst imageThumbnail = (thumbnail) => {\n  return isNonNullish(thumbnail) && !!thumbnail.url;\n};\nconst link = (field) => {\n  return isNonNullish(field) && (\"id\" in field || \"url\" in field);\n};\nexport {\n  imageThumbnail,\n  link,\n  richText\n};\n//# sourceMappingURL=isFilled.js.map\n","import { isInternalURL } from \"../lib/isInternalURL.js\";\nimport { asLink } from \"./asLink.js\";\nimport { link } from \"./isFilled.js\";\nconst asLinkAttrs = (linkFieldOrDocument, config = {}) => {\n  if (linkFieldOrDocument && // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore - Bug in TypeScript 4.9: https://github.com/microsoft/TypeScript/issues/51501\n  (\"link_type\" in linkFieldOrDocument ? link(linkFieldOrDocument) : linkFieldOrDocument)) {\n    const target = (\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore - Bug in TypeScript 4.9: https://github.com/microsoft/TypeScript/issues/51501\n      \"target\" in linkFieldOrDocument ? linkFieldOrDocument.target : void 0\n    );\n    const rawHref = asLink(linkFieldOrDocument, config.linkResolver);\n    const href = rawHref == null ? void 0 : rawHref;\n    const isExternal = typeof href === \"string\" ? !isInternalURL(href) : false;\n    const rel = config.rel ? config.rel({ href, isExternal, target }) : isExternal ? \"noreferrer\" : void 0;\n    return {\n      href,\n      target,\n      rel: rel == null ? void 0 : rel\n    };\n  }\n  return {};\n};\nexport {\n  asLinkAttrs\n};\n//# sourceMappingURL=asLinkAttrs.js.map\n","const isInternalURL = (url) => {\n  const isInternal = /^(\\/(?!\\/)|#)/.test(url);\n  const isSpecialLink = !isInternal && !/^https?:\\/\\//.test(url);\n  return isInternal && !isSpecialLink;\n};\nexport {\n  isInternalURL\n};\n//# sourceMappingURL=isInternalURL.js.map\n","import { jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { asLinkAttrs } from './../_node_modules/@prismicio/client/dist/helpers/asLinkAttrs.js';\nimport \"@prismicio/richtext\";\nimport { devMsg } from \"../lib/devMsg.js\";\nimport { isInternalURL } from \"../lib/isInternalURL.js\";\nconst defaultComponent = \"a\";\nconst PrismicLink = React.forwardRef(function PrismicLink2({ field, document: doc, linkResolver, internalComponent, externalComponent, ...restProps }, ref) {\n  if (typeof process !== \"undefined\" && process.env.NODE_ENV === \"development\") {\n    if (field) {\n      if (!field.link_type) {\n        console.error(`[PrismicLink] This \"field\" prop value caused an error to be thrown.\n`, field);\n        throw new Error(`[PrismicLink] The provided field is missing required properties to properly render a link. The link will not render. For more details, see ${devMsg(\"missing-link-properties\")}`);\n      } else if (Object.keys(field).length > 1 && !(\"url\" in field || \"uid\" in field || \"id\" in field)) {\n        console.warn(`[PrismicLink] The provided field is missing required properties to properly render a link. The link may not render correctly. For more details, see ${devMsg(\"missing-link-properties\")}`, field);\n      }\n    } else if (doc) {\n      if (!(\"url\" in doc || \"id\" in doc)) {\n        console.warn(`[PrismicLink] The provided document is missing required properties to properly render a link. The link may not render correctly. For more details, see ${devMsg(\"missing-link-properties\")}`, doc);\n      }\n    }\n  }\n  const { href: computedHref, rel: computedRel, ...attrs } = asLinkAttrs(field ?? doc, {\n    linkResolver,\n    rel: typeof restProps.rel === \"function\" ? restProps.rel : void 0\n  });\n  let rel = computedRel;\n  if (\"rel\" in restProps && typeof restProps.rel !== \"function\") {\n    rel = restProps.rel;\n  }\n  const href = (\"href\" in restProps ? restProps.href : computedHref) || \"\";\n  const InternalComponent = internalComponent || defaultComponent;\n  const ExternalComponent = externalComponent || defaultComponent;\n  const Component = href && isInternalURL(href) ? InternalComponent : ExternalComponent;\n  return /* @__PURE__ */ jsx(Component, { ref, ...attrs, ...restProps, href, rel });\n});\nexport {\n  PrismicLink,\n  defaultComponent\n};\n//# sourceMappingURL=PrismicLink.js.map\n","const isInternalURL = (url) => {\n  const isInternal = /^(\\/(?!\\/)|#)/.test(url);\n  const isSpecialLink = !isInternal && !/^https?:\\/\\//.test(url);\n  return isInternal && !isSpecialLink;\n};\nexport {\n  isInternalURL\n};\n//# sourceMappingURL=isInternalURL.js.map\n","import { jsx, Fragment } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport * as prismicR from \"@prismicio/richtext\";\nimport { PrismicLink } from \"./PrismicLink.js\";\nimport { devMsg } from \"../lib/devMsg.js\";\nimport { richText } from './../_node_modules/@prismicio/client/dist/helpers/isFilled.js';\nconst createDefaultSerializer = (args) => prismicR.wrapMapSerializer({\n  heading1: ({ children, key }) => /* @__PURE__ */ jsx(\"h1\", { children }, key),\n  heading2: ({ children, key }) => /* @__PURE__ */ jsx(\"h2\", { children }, key),\n  heading3: ({ children, key }) => /* @__PURE__ */ jsx(\"h3\", { children }, key),\n  heading4: ({ children, key }) => /* @__PURE__ */ jsx(\"h4\", { children }, key),\n  heading5: ({ children, key }) => /* @__PURE__ */ jsx(\"h5\", { children }, key),\n  heading6: ({ children, key }) => /* @__PURE__ */ jsx(\"h6\", { children }, key),\n  paragraph: ({ children, key }) => /* @__PURE__ */ jsx(\"p\", { children }, key),\n  preformatted: ({ node, key }) => /* @__PURE__ */ jsx(\"pre\", { children: node.text }, key),\n  strong: ({ children, key }) => /* @__PURE__ */ jsx(\"strong\", { children }, key),\n  em: ({ children, key }) => /* @__PURE__ */ jsx(\"em\", { children }, key),\n  listItem: ({ children, key }) => /* @__PURE__ */ jsx(\"li\", { children }, key),\n  oListItem: ({ children, key }) => /* @__PURE__ */ jsx(\"li\", { children }, key),\n  list: ({ children, key }) => /* @__PURE__ */ jsx(\"ul\", { children }, key),\n  oList: ({ children, key }) => /* @__PURE__ */ jsx(\"ol\", { children }, key),\n  image: ({ node, key }) => {\n    const img = /* @__PURE__ */ jsx(\"img\", { src: node.url, alt: node.alt ?? void 0, \"data-copyright\": node.copyright ? node.copyright : void 0 });\n    return /* @__PURE__ */ jsx(\"p\", { className: \"block-img\", children: node.linkTo ? /* @__PURE__ */ jsx(PrismicLink, { linkResolver: args.linkResolver, internalComponent: args.internalLinkComponent, externalComponent: args.externalLinkComponent, field: node.linkTo, children: img }) : img }, key);\n  },\n  embed: ({ node, key }) => /* @__PURE__ */ jsx(\"div\", { \"data-oembed\": node.oembed.embed_url, \"data-oembed-type\": node.oembed.type, \"data-oembed-provider\": node.oembed.provider_name, dangerouslySetInnerHTML: { __html: node.oembed.html ?? \"\" } }, key),\n  hyperlink: ({ node, children, key }) => /* @__PURE__ */ jsx(PrismicLink, { field: node.data, linkResolver: args.linkResolver, internalComponent: args.internalLinkComponent, externalComponent: args.externalLinkComponent, children }, key),\n  label: ({ node, children, key }) => /* @__PURE__ */ jsx(\"span\", { className: node.data.label, children }, key),\n  span: ({ text, key }) => {\n    const result = [];\n    let i = 0;\n    for (const line of text.split(\"\\n\")) {\n      if (i > 0) {\n        result.push(/* @__PURE__ */ jsx(\"br\", {}, `${i}__break`));\n      }\n      result.push(/* @__PURE__ */ jsx(React.Fragment, { children: line }, `${i}__line`));\n      i++;\n    }\n    return /* @__PURE__ */ jsx(React.Fragment, { children: result }, key);\n  }\n});\nfunction PrismicRichText({ linkResolver, field, fallback, components, externalLinkComponent, internalLinkComponent, ...restProps }) {\n  return React.useMemo(() => {\n    if (typeof process !== \"undefined\" && process.env.NODE_ENV === \"development\") {\n      if (\"className\" in restProps) {\n        console.warn(`[PrismicRichText] className cannot be passed to <PrismicRichText> since it renders an array without a wrapping component. For more details, see ${devMsg(\"classname-is-not-a-valid-prop\")}.`, field);\n      }\n    }\n    if (richText(field)) {\n      const serializer = prismicR.composeSerializers(typeof components === \"object\" ? prismicR.wrapMapSerializer(components) : components, createDefaultSerializer({\n        linkResolver,\n        internalLinkComponent,\n        externalLinkComponent\n      }));\n      const serialized = prismicR.serialize(field, (type, node, text, children, key) => {\n        const result = serializer(type, node, text, children, key);\n        if (React.isValidElement(result) && result.key == null) {\n          return React.cloneElement(result, { key });\n        } else {\n          return result;\n        }\n      });\n      return /* @__PURE__ */ jsx(Fragment, { children: serialized });\n    } else {\n      return fallback != null ? /* @__PURE__ */ jsx(Fragment, { children: fallback }) : null;\n    }\n  }, [\n    field,\n    internalLinkComponent,\n    externalLinkComponent,\n    components,\n    linkResolver,\n    fallback\n  ]);\n}\nexport {\n  PrismicRichText\n};\n//# sourceMappingURL=PrismicRichText.js.map\n","import { jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nconst PrismicContext = React.createContext({});\nconst PrismicProvider = ({ client, linkResolver, richTextComponents, internalLinkComponent, externalLinkComponent, children }) => {\n  const value = React.useMemo(() => ({\n    client,\n    linkResolver,\n    richTextComponents,\n    internalLinkComponent,\n    externalLinkComponent\n  }), [\n    client,\n    linkResolver,\n    richTextComponents,\n    internalLinkComponent,\n    externalLinkComponent\n  ]);\n  return /* @__PURE__ */ jsx(PrismicContext.Provider, { value, children });\n};\nexport {\n  PrismicContext,\n  PrismicProvider\n};\n//# sourceMappingURL=PrismicProvider.js.map\n","import { jsx } from \"react/jsx-runtime\";\nimport * as prismicR from \"@prismicio/richtext\";\nimport { PrismicRichText as PrismicRichText$1 } from \"./react-server/PrismicRichText.js\";\nimport { usePrismicContext } from \"./usePrismicContext.js\";\nconst PrismicRichText = function PrismicRichText2({ components, ...restProps }) {\n  const context = usePrismicContext();\n  const serializer = prismicR.composeSerializers(typeof components === \"object\" ? prismicR.wrapMapSerializer(components) : components, typeof context.richTextComponents === \"object\" ? prismicR.wrapMapSerializer(context.richTextComponents) : context.richTextComponents);\n  return /* @__PURE__ */ jsx(PrismicRichText$1, { components: serializer, internalLinkComponent: context.internalLinkComponent, externalLinkComponent: context.externalLinkComponent, ...restProps });\n};\nexport {\n  PrismicRichText\n};\n//# sourceMappingURL=PrismicRichText.js.map\n","import * as React from \"react\";\nimport { PrismicContext } from \"./PrismicProvider.js\";\nconst usePrismicContext = () => {\n  return React.useContext(PrismicContext) || {};\n};\nexport {\n  usePrismicContext\n};\n//# sourceMappingURL=usePrismicContext.js.map\n","import React from \"react\"\nimport { useSiteMetadata } from \"../hooks/useSiteMetadata\";\n\ntype AllProps = {\n  title?: string;\n  description?: string;\n  author?: string;\n  image?: string;\n}\nexport const Head = (props: AllProps) => {\n  const metadata = {\n    ...useSiteMetadata(),\n    ...props,\n  };\n  const { title, description, author, image } = metadata;\n\n  return (\n    <>\n      <title>{title}</title>\n      <meta name=\"title\" content={title} />\n      <meta name=\"description\" content={description} />\n\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:url\" content=\"http://juanmurillo.co/\" />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n\n      <meta property=\"twitter:creator\" content={author} />\n      <meta property=\"twitter:card\" content=\"summary_large_image\" />\n      <meta property=\"twitter:url\" content=\"http://juanmurillo.co/\" />\n      <meta property=\"twitter:title\" content={title} />\n      <meta property=\"twitter:description\" content={description} />\n      <meta property=\"twitter:image\" content={image} />\n    </>\n  )\n}\n","import { graphql, useStaticQuery } from \"gatsby\"\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    {\n      site {\n        siteMetadata {\n          title\n          description\n          author\n          image\n        }\n      }\n    }\n  `)\n\n  return data.site.siteMetadata\n}\n","import { useContext, useEffect } from \"react\";\nimport { LanguageContext } from \"../context/LanguageContext\";\n\nconst getLangFromDoc = (doc) => ({\n  current: doc.lang,\n  alternates: doc.alternate_languages.map(alternate => alternate.document.url).map(alternate => alternate.replace('/en-us', '/')),\n})\n\nconst getLangFromUrl = (pathname) => pathname.includes('es-co') ? {\n  current: 'es-co',\n  alternates: [pathname].map(a =>a.replace('/es-co', '')),\n} : {\n  current: 'en-us',\n  alternates: [`/es-co${pathname}`],\n}\n\nexport const useUpdateLanguage = (args) => {\n  const { setLanguage } = useContext(LanguageContext)\n  const lang = args?.doc ? getLangFromDoc(args.doc) : getLangFromUrl(args?.location?.pathname);\n\n  useEffect(() => {\n    setLanguage(lang);\n  }, [args.doc, setLanguage])\n\n  return { language: lang }\n}"],"names":["composeSerializers","serializers","args","i","length","serializer","res","RichTextNodeType","RichTextReversedNodeType","wrapMapSerializer","mapSerializer","type","node","text","children","key","tagSerializer","uuid","toString","createTreeNode","createTextTreeNode","spans","prepareNodes","nodes","mutNodes","slice","items","push","splice","nodeToTreeNode","textNodeSpansToTreeNodeChildren","parentSpan","mutSpans","sort","a","b","start","end","span","parentSpanStart","spanStart","spanEnd","childSpans","j","siblingSpan","spanWithText","serialize","richTextField","serializeTreeNodes","preparedNodes","asTree","serializedTreeNodes","treeNode","serializedTreeNode","LinkType","asLink","linkFieldOrDocument","configObjectOrTuple","linkField","link_type","id","prismicDocument","uid","tags","lang","url","slug","_a","slugs","data","Object","keys","configObjectOrLinkResolver","config","linkResolver","resolvedURL","isNonNullish","input","asLinkAttrs","field","target","rawHref","href","isExternal","isInternal","test","isSpecialLink","isInternalURL","rel","PrismicLink","document","doc","internalComponent","externalComponent","restProps","ref","computedHref","computedRel","attrs","InternalComponent","ExternalComponent","Component","jsx","PrismicRichText","fallback","components","externalLinkComponent","internalLinkComponent","richText","heading1","heading2","heading3","heading4","heading5","heading6","paragraph","preformatted","strong","em","listItem","oListItem","list","oList","image","img","src","alt","copyright","className","linkTo","embed","oembed","embed_url","provider_name","dangerouslySetInnerHTML","__html","html","hyperlink","label","result","line","split","serialized","Fragment","PrismicContext","context","richTextComponents","Head","props","metadata","useStaticQuery","site","siteMetadata","title","description","author","___EmotionJSX","React","name","content","property","useUpdateLanguage","_args$location","setLanguage","useContext","LanguageContext","current","alternates","alternate_languages","map","alternate","replace","pathname","location","includes","useEffect","language"],"sourceRoot":""}